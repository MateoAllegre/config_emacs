;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-char-history compile-history goto-line-history set-variable-value-history custom-variable-history regexp-history coding-system-history shell-command-history yes-or-no-p-history read-expression-history consult-org--history org-link--history command-history eww-prompt-history consult--line-history consult--buffer-history bookmark-history empty-history query-replace-history search-ring minibuffer-history file-name-history buffer-name-history extended-command-history))
(setq read-char-history '("yes"))
(setq goto-line-history '("213" "37"))
(setq set-variable-value-history '("4"))
(setq custom-variable-history '("c-basic-offset"))
(setq coding-system-history '("utf-8"))
(setq shell-command-history '("C:/Windows/System32/wsl.exe"))
(setq yes-or-no-p-history '("yes"))
(setq command-history '((bookmark-jump "configuration emacs") (bookmark-jump "configuration emacs") (bookmark-jump "Desktop") (find-file "c:/Users/mateo/Desktop/PROJET/X fenêtré/main.c" t) (bookmark-jump "Desktop") (switch-to-buffer "sorting.c" nil 'force-same-window) (switch-to-buffer "Makefile" nil 'force-same-window) (linum-mode 'toggle) (execute-extended-command nil "linum-mode" "linum") (goto-line 213 nil) (goto-line 213 nil) (execute-extended-command nil "goto-line" "goto") (switch-to-buffer "sorting_main.c" nil 'force-same-window) (avy-goto-char-2 38 97 nil nil nil) (query-replace "adrHeadPtr" "cour" nil nil nil nil nil) (query-replace "endSorting" "adrHeadPtr" nil nil nil nil nil) (switch-to-buffer "sorting.h" nil 'force-same-window) (switch-to-buffer "sorting_main.c" nil 'force-same-window) (switch-to-buffer "sorting.h" nil 'force-same-window) (switch-to-buffer "sorting_main.c" nil 'force-same-window) (switch-to-buffer "sorting.h" nil 'force-same-window) (switch-to-buffer "sorting_main.c" nil 'force-same-window) (switch-to-buffer "sorting.h" nil 'force-same-window) (switch-to-buffer "sorting_main.c" nil 'force-same-window) (switch-to-buffer "sorting.h" nil 'force-same-window) (switch-to-buffer "sorting.c" nil 'force-same-window) (tool-bar-mode 'toggle) (execute-extended-command nil "tool-bar-mode" "tool") (consult-grep nil) (execute-extended-command nil "consult-grep" "consus") (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "ripg") (bookmark-jump "Desktop") (query-replace "points" "pts" nil nil nil nil nil) (query-replace "é" "e" nil nil nil nil nil) (switch-to-buffer "correction_malik.py" nil 'force-same-window) (avy-goto-char-2 46 39 nil nil nil) (avy-goto-char-2 100 101 nil nil nil) (avy-goto-char-2 116 115 nil nil nil) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "p1.py" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (switch-to-buffer "correction_malik.py" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (find-file "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/correction_malik.py" t) (query-replace "x2" "X2" nil nil nil nil nil) (query-replace "x1" "X1" nil nil nil nil nil) (query-replace "pi" "np.pi" nil nil nil nil nil) (switch-to-buffer "*shell*" nil 'force-same-window) (eww "rickroll" 1) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "p1.py" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (point-to-register 109 nil) (tetris) (execute-extended-command nil "tetris" "tetris") (switch-to-buffer "*scratch*" nil 'force-same-window) (keyfreq-show nil) (execute-extended-command nil "keyfreq-show" "key fre") (reload-configuration-of-emacs) (execute-extended-command nil "reload-configuration-of-emacs" "rel") (embark-act nil) (execute-extended-command nil "embark-act" nil) (embark-act nil) (execute-extended-command nil "embark-act" "em") (embark-act nil) (execute-extended-command nil "embark-act" "em") (describe-function 'xah-save-all-unsaved) (describe-function 'save-some-buffers) (describe-variable 'xah-fly-command-mode-activate-hook) (bookmark-jump "configuration emacs") (query-replace "frere_gauche" "frere" nil nil nil nil nil) (describe-key '((" f" . [32 102]))) (linum-mode 'toggle) (execute-extended-command nil "linum-mode" "linum") (switch-to-buffer "arbres_insert_main.c" nil 'force-same-window) (revert-buffer t) (execute-extended-command nil "revert-buffer" "re") (avy-goto-char-2 118 44 nil nil nil) (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (avy-goto-char-2 41 123 nil nil nil) (switch-to-buffer "arbres_parcours.c" nil 'force-same-window) (revert-buffer t) (execute-extended-command nil "revert-buffer" "revert bu") (switch-to-buffer "arbres_insert.c" nil 'force-same-window) (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (embark-act nil) (execute-extended-command nil "embark-act" "emba") (describe-function 'setq-default) (describe-key '(("" . [escape]))) (org-insert-structure-template "src emacs-lisp

") (bookmark-jump "configuration emacs") (query-replace ";" "" nil nil nil nil nil) (avy-goto-char-2 108 97 nil nil nil) (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (switch-to-buffer "arbres_parcours.h" nil 'force-same-window) (switch-to-buffer "arbres_parcours.c" nil 'force-same-window) (avy-goto-char-2 101 109 nil nil nil) (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (execute-extended-command nil "compile" "compile") (switch-to-buffer "arbres_parcours.h" nil 'force-same-window) (goto-line 37 nil) (goto-line 37 nil) (execute-extended-command nil "goto-line" "go to line") (query-replace "lvlh_cell_t" "cell_lvlh_t" nil nil nil nil nil) (set-variable 'c-basic-offset 4 nil) (embark-act nil) (execute-extended-command nil "embark-act" "em") (avy-goto-char-2 116 111 nil nil nil) (avy-goto-char-2 116 111 nil nil nil) (switch-to-buffer "arbres_parcours.c" nil 'force-same-window) (set-variable 'c-basic-offset 4 nil) (embark-act nil) (execute-extended-command nil "embark-act" "embar") (hippie-expand nil) (execute-extended-command nil "hippie-expand" "hip") (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (switch-to-buffer "Seance1" nil 'force-same-window) (linum-mode 'toggle) (execute-extended-command nil "linum-mode" "linum") (consult-ripgrep nil) (execute-extended-command nil "consult-ripgrep" "ripge") (switch-to-buffer "arbres_construct.c" nil 'force-same-window) (bookmark-jump "Desktop") (avy-goto-char-2 116 116 nil nil nil) (query-replace "wie" "carotte" nil nil nil nil nil) (query-replace "wie" "carotte" nil nil nil nil nil) (query-replace "wie" "carotte" nil nil nil nil nil) (query-replace "wie" "carotte" nil nil nil nil nil) (query-replace "wie" "carotte" nil nil nil nil nil) (query-replace "wie" "carotte" nil nil nil nil nil) (avy-goto-char-2 100 105 nil nil nil) (avy-goto-char-2 108 105 nil nil nil) (avy-goto-char-2 97 97 nil nil nil) (avy-goto-char-2 97 110 nil nil nil) (avy-goto-char-2 107 117 nil nil nil) (avy-goto-char-2 105 110 nil nil nil) (avy-goto-char-2 97 117 nil nil nil) (describe-key '((")" . [41]))) (describe-command 'avy-goto-char-timer) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" nil) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" nil) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" nil) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" nil) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" nil) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" nil) (avy-goto-char-timer nil) (execute-extended-command nil "avy-goto-char-timer" "avy time") (switch-to-buffer "script.org" nil 'force-same-window) (bookmark-jump "configuration emacs") (avy-goto-char-2 122 117 nil nil nil) (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" "visu") (bookmark-jump "Desktop") (switch-to-buffer "p1.py" nil 'force-same-window) (shell nil) (execute-extended-command nil "shell" "shel") (avy-goto-char-2 41 41 nil nil nil) (avy-goto-char-2 120 49 nil nil nil) (avy-goto-char-2 113 49 nil nil nil) (avy-goto-char-2 113 49 nil nil nil) (query-replace "x[1]" "x2" nil nil nil nil nil) (query-replace "x[0]" "x1" nil nil nil nil nil) (howdoi-query "switch in python") (execute-extended-command nil "howdoi-query" "howd") (straight-use-package '(howdoi :type git :flavor melpa :host github :repo "atykhonov/emacs-howdoi") nil nil nil 'interactive) (execute-extended-command nil "straight-use-package" "stra") (run-python "python -i" nil t) (execute-extended-command nil "run-python" "run") (find-file "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" t) (dired-create-directory "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4") (bookmark-jump "Desktop") (count-words nil nil) (execute-extended-command nil "count-words" "count") (avy-goto-char-2 115 116 nil nil nil) (count-words nil nil) (execute-extended-command nil "count-words" "count") (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" nil) (avy-goto-char-2 116 104 '(4) nil nil) (avy-goto-char-2 116 104 nil nil nil) (avy-goto-char-2 116 104 nil nil nil) (avy-goto-char-2 34 34 nil nil nil) (avy-goto-char-2 99 111 nil nil nil) (execute-extended-command nil "straight-use-package" "stra") (monkeytype-wpm-peek) (execute-extended-command nil "monkeytype-wpm-peek" "monke zen") (switch-to-buffer "script.org" nil 'force-same-window) (monkeytype-stop) (execute-extended-command nil "monkeytype-stop" "mon sto") (monkeytype-region (region-beginning) (region-end)) (execute-extended-command nil "monkeytype-region" "monkey regi") (straight-use-package '(monkeytype :type git :flavor melpa :host github :repo "jpablobr/emacs-monkeytype") nil nil nil 'interactive)))
(setq eww-prompt-history '("rickroll" "napoleon"))
(setq consult--line-history '("contour" "i 1 +=" "point cou" "point app" "def point" "func" "contour" "tracer " "tracer de" "comp" "ax fig" "comparaison" "string" "add hook comma" "alloc point" "raci" "fmem" "fmemopen" "fmem" "malloc" "depiler" "pile init" "pref2" "ärger" "avy go to char" "setq" "interpreter" "alloc" "test" "mat" "np.matr" "pop" "popul" "tp" "auto rever" "avy goto char" "pointu" "to char" "bu" "string" "minibuffer " "command hoo" "xfc hoo" "test" "auto save" "cp pop" "avy go to char" "emac" "consult"))
(setq bookmark-history '("configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "a" "a" "a" "configuration emacs" "Desktop"))
(setq query-replace-history '("cour" "adrHeadPtr" "adrHeadPtr" "endSorting" "pts" "points" "e" "é" "X2" "x2" "X1" "x1" "np.pi" "pi" "frere" "frere_gauche" "" ";" "cell_lvlh_t" "lvlh_cell_t" "carotte" "wie" "x2" "x[1]" "x1" "x[0]" "la" "λ" "λ" "la" "end" "start" "n" "N" "test" "select" "commentaire" "commande"))
(setq search-ring '(#("open-file" 0 9 (isearch-regexp-function nil isearch-case-fold-search t)) #("text-scalem" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("voir la" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("faites" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("emacs" 0 5 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq minibuffer-history '("u" "bash" "xah-save-all-unsaved" "save-some-buffers" "xah-fly-command-mode-activate-hook" "setq-default" "avy-goto-char-timer" "switch in python" "howdoi" "monkeytype" "gtranslate" "try-expand-line-all-buffers" "try-expand-dabbrev-visible" "2" "1" "0" "$#" "2" "1" "0" "$#" "python" "i" "dabbrev-expand" "embark-consult" "next-line" "use-short-answers" "explicit-shell-file-name" "shell-file-name" "explicit-shell-file-name" "xah-fly-command-mode-activate-hook" "auto-save-mode" "open-line" "xah-fly-org-mode-map" "expand-region" "configuration emacs" "company" "consult" "Desktop" "k"))
(setq file-name-history '("c:/Users/mateo/Desktop/PROJET/X fenêtré/main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/correction_malik.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Allemand/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Allemand/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/script.org" "c:/Users/mateo/Desktop/test.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/lecteur-ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/prodcons.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP2/ex1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/prodcons.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ex1q2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/TP3.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDVins_queries.sql" "c:/Users/mateo/Desktop/" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDFacturation_queries2.sql" "c:/Users/mateo/Desktop/emacs/todo.org" "c:/Users/mateo/Desktop/emacs/" "c:/Users/mateo/Desktop/test.txt" "../../../../mateo/Desktop/" "c:/Users/mateo/Desktop/testemacs.txt" "c:/Users/" "c:/Users/mateo/AppData/Roaming/.emacs.d/init.el" "../../../../mateo/Desktop/test.txt"))
(setq buffer-name-history '("sorting.c" "Makefile" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting.c" "correction_malik.py" "*shell*" "p1.py" "*scratch*" "correction_malik.py" "*shell*" "p1.py" "*scratch*" "arbres_insert_main.c" "arbres_construct.c" "arbres_parcours.c" "arbres_insert.c" "arbres_construct.c" "arbres_parcours.h" "arbres_parcours.c" "arbres_construct.c" "arbres_parcours.h" "arbres_parcours.c" "arbres_construct.c" "Seance1" "arbres_construct.c" "script.org" "p1.py" "script.org" "*scratch*" "script.org" "script.org<Anglais>" "script.org<ZZ1 S2>" "lecteur-ecrivain.sh" "config.org" "lecteur.sh" "ecrivain.sh" "ecrivain2.sh" "ecrivain.sh" "lecteur.sh" "prodcons.sh" "producteur.sh" "prodcons.sh" "producteur.sh" "Opti non lin" "*Python*" "*scratch*" "partie1.py" "TP3.org" "ex1q2.sh" "TP3.org" "arbres_construct_main.c" "arbres_construct.h" "teZZt.h" "arbres_construct_main.c" "arbres_construct.h" "arbres_construct.c" "eltsArbre.h" "arbres_construct.c" "eltsArbre.h" "arbres_construct.c" "eltsArbre.h" "arbres_construct.h" "TP3" "partie2.py" "*shell*" "ex1.py" "*shell*" "TP1" "partie2.py" "TP1" "partie2.py" "*shell*" "partie2.py" "*scratch*" "config.org" "*scratch*" "config.org" "*Help*" "*scratch*" "BDVins_queries.sql<ZZ1 S2>" "*scratch*" "*shell*" "*scratch*" "config.org" "*scratch*" "BDVins_queries.sql" "BDFacturation_queries2.sql" "*Help*" "BDFacturation_queries2.sql" "*scratch*" "*GNU Emacs*" "*scratch*" "config.org" "Astuces.org" "config.org" "Astuces.org" "config.org" "untitled" "config.org" "*Help*" "*scratch*" "config.org" "*scratch*" "config.org" "*scratch*" "config.org" "*scratch*" "config.org" "*scratch*" "emacs" "Desktop" "*scratch*" "config.org" "Desktop" "*scratch*" "config.org" "*scratch*" "*Messages*" "ç" "*Messages*" "untitled" "Desktop" "*scratch*" "Desktop" "*scratch*" "*Messages*" "*scratch*"))
(setq extended-command-history '("linum-mode" "goto-line" "tool-bar-mode" "consult-grep" "consult-ripgrep" "tetris" "keyfreq-show" "reload-configuration-of-emacs" "embark-act" "linum-mode" "revert-buffer" "embark-act" "compile" "goto-line" "embark-act" "hippie-expand" "linum-mode" "consult-ripgrep" "avy-goto-char-timer" "global-visual-line-mode" "shell" "howdoi-query" "straight-use-package" "run-python" "count-words" "global-visual-line-mode" "straight-use-package" "monkeytype-wpm-peek" "monkeytype-stop" "monkeytype-region" "straight-use-package" "global-visual-line-mode" "list-packages" "straight-use-package" "count-words" "avy-goto-char-2" "translate-region" "global-visual-line-mode" "wdired-change-to-wdired-mode" "doc-view-mode" "describe-key" "reload-configuration-of-emacs" "dabbrev-expand" "hippie-expand" "reload-configuration-of-emacs" "sh-case" "reload-configuration-of-emacs" "run-python" "sh-for" "revert-buffer-with-coding-system" "global-visual-line-mode" "linum-mode" "dabbrev-completion" "global-set-key" "global-visual-line-mode" "shell" "kill-buffer" "linum-mode" "query-replace" "shell" "python-menu" "run-python" "list-packages" "reload-configuration-of-emacs" "org-babel-expand-src-block" "list-packages" "describe-package" "straight-use-package" "consult-grep" "embark-act" "straight-use-package" "describe-package" "embark-act" "reload-configuration-of-emacs" "tetris" "reload-configuration-of-emacs" "tetris" "butterfly" "tetris-end-game" "tetris" "term" "describe-variable" "reload-configuration-of-emacs" "org-insert-structure-template" "cd" "global-visual-line-mode" "toggle-word-wrap" "recover-session" "reload-configuration-of-emacs" "undo" "emacs-lisp-mode" "reload-configuration-of-emacs" "linum-mode" "reload-configuration-of-emacs" "describe-variable" "reload-configuration-of-emacs" "revert-buffer" "emacs-version" "reload-configuration-of-emacs" "consult-grep" "consult-ripgrep" "reload-configuration-of-emacs" "consult-line" "straight-use-package" "avy-goto-char-timer" "avy-goto-char-2" "revert-buffer" "electric-pair-mode" "company-mode" "company-css" "straight-use-package" "consult-buffer" "straight-use-package" "tool-bar-mode" "reload-configuration-of-emacs" "electric-pair-mode" "comment-box" "xah-fly-keys"))
(setq kill-ring '("#include <SDL2/SDL.h>
     #include <stdio.h>

     /************************************/
     /*  exemple de création de fenêtres */
     /************************************/

     int main(int argc, char **argv) {
       (void)argc;
       (void)argv;

       SDL_Window 
            *window_1 = NULL,                     // Future fenêtre de gauche
        *window_2 = NULL;                     // Future fenêtre de droite

       /* Initialisation de la SDL  + gestion de l'échec possible */
       if (SDL_Init(SDL_INIT_VIDEO) != 0) {
     SDL_Log(\"Error : SDL initialisation - %s\\n\", 
                  SDL_GetError());                // l'initialisation de la SDL a échoué 
     exit(EXIT_FAILURE);
       }

       /* Création de la fenêtre de gauche */
       window_1 = SDL_CreateWindow(
       \"Fenêtre à gauche\",                    // codage en utf8, donc accents possibles
       0, 0,                                  // coin haut gauche en haut gauche de l'écran
       400, 300,                              // largeur = 400, hauteur = 300
       SDL_WINDOW_RESIZABLE);                 // redimensionnable

       if (window_1 == NULL) {
     SDL_Log(\"Error : SDL window 1 creation - %s\\n\", 
                 SDL_GetError());                 // échec de la création de la fenêtre
     SDL_Quit();                              // On referme la SDL       
     exit(EXIT_FAILURE);
       }
       /* Création de la fenêtre de droite */
       window_2 = SDL_CreateWindow(
       \"Fenêtre à droite\",                    // codage en utf8, donc accents possibles
       400, 0,                                // à droite de la fenêtre de gauche
       500, 300,                              // largeur = 500, hauteur = 300
       0);

       if (window_2 == NULL) {
     /* L'init de la SDL : OK
        fenêtre 1 :OK
        fenêtre 2 : échec */
     SDL_Log(\"Error : SDL window 2 creation - %s\\n\", 
                 SDL_GetError());                 // échec de la création de la deuxième fenêtre 
     SDL_DestroyWindow(window_1);             // la première fenétre (qui elle a été créée) doit être détruite
     SDL_Quit();
     exit(EXIT_FAILURE);
       }

       /* Normalement, on devrait ici remplir les fenêtres... */
       SDL_Delay(2000);                           // Pause exprimée  en ms

       /* et on referme tout ce qu'on a ouvert en ordre inverse de la création */
       SDL_DestroyWindow(window_2);               // la fenêtre 2  
       SDL_DestroyWindow(window_1);               // la fenêtre 1     

       SDL_Quit();                                // la SDL
 
       return 0;
     }" "#include <SDL2/SDL.h>
     #include <stdio.h>

     /********************************************/
     /* Vérification de l'installation de la SDL */
     /********************************************/

     int main(int argc, char **argv) {
       (void)argc;
       (void)argv;
       SDL_version nb;
       SDL_VERSION(&nb);

       printf(\"Version de la SDL : %d.%d.%d\\n\", nb.major, nb.minor, nb.patch);
       return 0;
     }" #("poly1" 0 5 (fontified t face font-lock-variable-name-face)) #("	LL_free_list(&polyVide);}" 0 24 (fontified t) 24 25 (rear-nonsticky t fontified t) 25 26 (fontified t rear-nonsticky t c-type c-decl-id-start)) #("	LL_free_list(&polyVide);}" 0 24 (fontified t) 24 25 (fontified t rear-nonsticky t) 25 26 (fontified t c-type c-decl-id-start)) #("	LL_free_list(&polyVide);" 0 24 (fontified t) 24 25 (fontified t rear-nonsticky t)) #("	LL_free_list(&polyVide);" 0 25 (fontified t)) #("    //TO DO
    //Use monom_degree_cmp to compare the degrees of two monoms (function from valCell)

" 0 4 (c-in-sws t c-is-sws t fontified t) 4 5 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 5 6 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 11 (c-in-sws t fontified t face font-lock-comment-face) 11 12 (c-in-sws t fontified t face font-lock-comment-face) 12 15 (c-in-sws t fontified t) 15 16 (c-in-sws t fontified t) 16 17 (c-in-sws t fontified t c-is-sws t face font-lock-comment-delimiter-face) 17 18 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 18 86 (c-in-sws t fontified t face font-lock-comment-face) 86 90 (c-in-sws t fontified t face font-lock-comment-face) 90 91 (c-in-sws t fontified t face font-lock-comment-face) 91 98 (c-in-sws t fontified t face font-lock-comment-face) 98 99 (c-in-sws t fontified t face font-lock-comment-face) 99 100 (c-in-sws t fontified t face font-lock-comment-face) 100 101 (fontified t)) #("cell_t** minimum(cell_t* headPtr)
{
    cell_t** adrMin = &headPtr;
    cell_t* cour = headPtr;
    cell_t** pprec = adrMin;    

    //TO DO
    //Use monom_degree_cmp to compare the degrees of two monoms (function from valCell)

    while(cour != NULL) {
	if(monom_degree_cmp(&(cour->val), &((*adrMin)->val)) < 0) {
	    adrMin = pprec;
	}
	pprec = &(cour->next);
	cour = *pprec;
    }

    return adrMin;
}" 0 1 (fontified t c-is-sws t face font-lock-type-face) 1 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 9 (fontified t) 9 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t c-type c-decl-arg-start) 17 23 (fontified t face font-lock-type-face) 23 25 (fontified t) 25 32 (fontified t face font-lock-variable-name-face) 32 40 (fontified t) 40 45 (fontified t face font-lock-type-face) 45 46 (fontified t c-type c-decl-id-start face font-lock-type-face) 46 49 (fontified t) 49 55 (fontified t face font-lock-variable-name-face) 55 68 (fontified t) 68 72 (fontified t) 72 73 (fontified t face font-lock-type-face) 73 74 (fontified t face font-lock-type-face) 74 75 (fontified t face font-lock-type-face) 75 76 (fontified t face font-lock-type-face) 76 77 (fontified t face font-lock-type-face) 77 78 (fontified t c-type c-decl-id-start face font-lock-type-face) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t face font-lock-variable-name-face) 81 82 (fontified t face font-lock-variable-name-face) 82 83 (fontified t face font-lock-variable-name-face) 83 84 (fontified t face font-lock-variable-name-face) 84 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t) 96 100 (fontified t) 100 101 (fontified t face font-lock-type-face) 101 102 (fontified t face font-lock-type-face) 102 103 (fontified t face font-lock-type-face) 103 104 (fontified t face font-lock-type-face) 104 105 (fontified t face font-lock-type-face) 105 106 (fontified t c-type c-decl-id-start face font-lock-type-face) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t face font-lock-variable-name-face) 110 111 (fontified t face font-lock-variable-name-face) 111 112 (fontified t face font-lock-variable-name-face) 112 113 (fontified t face font-lock-variable-name-face) 113 114 (fontified t face font-lock-variable-name-face) 114 115 (fontified t) 115 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t) 122 123 (fontified t) 123 124 (rear-nonsticky t fontified t) 124 128 (fontified t) 128 129 (fontified t) 129 130 (fontified t) 130 134 (c-in-sws t c-is-sws t fontified t) 134 135 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 135 136 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 136 141 (c-in-sws t fontified t face font-lock-comment-face) 141 142 (c-in-sws t fontified t face font-lock-comment-face) 142 145 (c-in-sws t fontified t) 145 146 (c-in-sws t fontified t) 146 147 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 147 148 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 148 216 (c-in-sws t fontified t face font-lock-comment-face) 216 220 (c-in-sws t fontified t face font-lock-comment-face) 220 221 (c-in-sws t fontified t face font-lock-comment-face) 221 228 (c-in-sws t fontified t face font-lock-comment-face) 228 229 (c-in-sws t fontified t face font-lock-comment-face) 229 230 (c-in-sws t fontified t face font-lock-comment-face) 230 231 (c-is-sws t fontified t) 231 235 (c-is-sws t c-in-sws t fontified t) 235 236 (c-is-sws t fontified t face font-lock-keyword-face) 236 240 (fontified t face font-lock-keyword-face) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t face font-lock-constant-face) 250 251 (fontified t face font-lock-constant-face) 251 252 (fontified t face font-lock-constant-face) 252 253 (fontified t face font-lock-constant-face) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t face font-lock-keyword-face) 259 260 (fontified t face font-lock-keyword-face) 260 261 (fontified t) 261 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 280 (fontified t) 280 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t) 285 286 (fontified t) 286 287 (fontified t) 287 288 (fontified t) 288 289 (fontified t) 289 290 (fontified t) 290 291 (fontified t) 291 292 (fontified t) 292 293 (fontified t) 293 294 (fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 297 (fontified t) 297 298 (fontified t) 298 299 (fontified t) 299 300 (fontified t) 300 301 (fontified t) 301 302 (fontified t) 302 303 (fontified t) 303 304 (fontified t) 304 305 (fontified t) 305 306 (fontified t) 306 307 (fontified t) 307 308 (fontified t) 308 309 (fontified t) 309 310 (fontified t) 310 311 (fontified t) 311 312 (fontified t) 312 313 (fontified t) 313 314 (fontified t) 314 315 (fontified t) 315 316 (fontified t) 316 317 (fontified t) 317 318 (fontified t) 318 323 (fontified t) 323 324 (fontified t) 324 325 (fontified t) 325 326 (fontified t) 326 327 (fontified t) 327 328 (fontified t) 328 329 (fontified t) 329 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 333 (fontified t) 333 334 (fontified t) 334 335 (fontified t) 335 336 (fontified t) 336 337 (fontified t) 337 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t) 341 342 (fontified t) 342 343 (fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 346 (fontified t) 346 347 (fontified t) 347 348 (fontified t) 348 349 (fontified t) 349 350 (fontified t) 350 351 (fontified t) 351 352 (fontified t) 352 353 (fontified t) 353 354 (fontified t) 354 355 (fontified t) 355 356 (fontified t) 356 357 (fontified t) 357 358 (fontified t) 358 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 362 (fontified t) 362 363 (fontified t) 363 364 (fontified t) 364 365 (fontified t) 365 366 (fontified t) 366 367 (fontified t) 367 368 (fontified t) 368 369 (fontified t) 369 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 373 (fontified t) 373 374 (fontified t) 374 375 (fontified t) 375 376 (fontified t) 376 377 (fontified t) 377 378 (fontified t) 378 379 (fontified t) 379 380 (fontified t) 380 381 (fontified t) 381 382 (fontified t) 382 386 (fontified t) 386 387 (fontified t) 387 388 (fontified t) 388 389 (c-is-sws t fontified t) 389 393 (c-is-sws t fontified t) 393 394 (c-is-sws t fontified t face font-lock-keyword-face) 394 399 (fontified t face font-lock-keyword-face) 399 409 (fontified t)) #("/** TO DO
 * @brief Selection sorting of a list
 * @param [in,out] adrHeadPtr : address of the head of the list
 */
void selectionSorting(cell_t** adrHeadPtr)
{
    cell_t** pprec = adrHeadPtr;
    while(*pprec != NULL) {
	oneRoundSorting(pprec);
	pprec = &((*pprec)->next);
    }
}
" 0 4 (c-in-sws t fontified t face font-lock-doc-face) 4 13 (c-in-sws t fontified t face font-lock-doc-face) 13 19 (c-in-sws t fontified t face (font-lock-doc-markup-face font-lock-doc-face)) 19 51 (c-in-sws t fontified t face font-lock-doc-face) 51 57 (c-in-sws t fontified t face (font-lock-doc-markup-face font-lock-doc-face)) 57 112 (c-in-sws t fontified t face font-lock-doc-face) 112 115 (c-in-sws t fontified t face font-lock-doc-face) 115 116 (c-in-sws t fontified t) 116 117 (fontified t face font-lock-type-face) 117 118 (fontified t face font-lock-type-face) 118 119 (fontified t face font-lock-type-face) 119 120 (fontified t c-type c-decl-id-start face font-lock-type-face) 120 121 (fontified t) 121 122 (fontified t face font-lock-function-name-face) 122 137 (fontified t face font-lock-function-name-face) 137 138 (fontified t c-type c-decl-arg-start) 138 144 (fontified t face font-lock-type-face) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t face font-lock-variable-name-face) 148 149 (fontified t face font-lock-variable-name-face) 149 150 (fontified t face font-lock-variable-name-face) 150 151 (fontified t face font-lock-variable-name-face) 151 152 (fontified t face font-lock-variable-name-face) 152 153 (fontified t face font-lock-variable-name-face) 153 154 (fontified t face font-lock-variable-name-face) 154 155 (fontified t face font-lock-variable-name-face) 155 156 (fontified t face font-lock-variable-name-face) 156 157 (fontified t face font-lock-variable-name-face) 157 158 (fontified t) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 165 (fontified t) 165 166 (fontified t face font-lock-type-face) 166 167 (fontified t face font-lock-type-face) 167 168 (fontified t face font-lock-type-face) 168 169 (fontified t face font-lock-type-face) 169 170 (fontified t face font-lock-type-face) 170 171 (fontified t c-type c-decl-id-start face font-lock-type-face) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t) 174 175 (fontified t face font-lock-variable-name-face) 175 176 (fontified t face font-lock-variable-name-face) 176 177 (fontified t face font-lock-variable-name-face) 177 178 (fontified t face font-lock-variable-name-face) 178 179 (fontified t face font-lock-variable-name-face) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t) 190 191 (fontified t) 191 192 (fontified t) 192 193 (fontified t) 193 194 (fontified t) 194 198 (fontified t) 198 203 (fontified t face font-lock-keyword-face) 203 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 207 (fontified t) 207 208 (fontified t) 208 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t face font-lock-constant-face) 215 216 (fontified t face font-lock-constant-face) 216 217 (fontified t face font-lock-constant-face) 217 218 (fontified t face font-lock-constant-face) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 254 (fontified t) 254 255 (fontified t) 255 256 (fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (fontified t) 259 260 (fontified t) 260 261 (fontified t) 261 262 (fontified t) 262 263 (fontified t) 263 264 (fontified t) 264 265 (fontified t) 265 266 (fontified t) 266 267 (fontified t) 267 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 271 (fontified t) 271 272 (fontified t) 272 273 (fontified t) 273 274 (fontified t) 274 275 (fontified t) 275 279 (fontified t) 279 280 (fontified t) 280 281 (fontified t) 281 282 (fontified t) 282 283 (fontified t)) #("stdout" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) #("cour" 0 4 (fontified t)) #("pprec);
	" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) #("cour" 0 4 (fontified t)) #("file" 0 4 (fontified t)) #("	LL_save_list_toFile(file, &poly2, monom_save2file);" 0 52 (fontified t)) #("(*cour)" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t)) #("adrHe" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) #("endSorting" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) #("endSorting" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) #("NULL" 0 1 (fontified t face font-lock-constant-face) 1 2 (fontified t face font-lock-constant-face) 2 3 (fontified t face font-lock-constant-face) 3 4 (fontified t face font-lock-constant-face)) #("while" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face)) #("while
" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) #("
}
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("    TO DO
" 0 4 (fontified t) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face) 6 7 (fontified t) 7 9 (fontified t face font-lock-variable-name-face) 9 10 (fontified t)) #("void selectionSorting(cell_t** adrHeadPtr);" 0 1 (fontified t c-is-sws t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t c-is-sws t face font-lock-function-name-face) 6 21 (fontified t face font-lock-function-name-face) 21 22 (fontified t c-type c-decl-arg-start) 22 28 (fontified t face font-lock-type-face) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t face font-lock-variable-name-face) 40 41 (fontified t face font-lock-variable-name-face) 41 42 (fontified t) 42 43 (fontified t)) #("    *endSorting = (*endSorting)->next;
" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t)) #("/*
" 0 1 (c-is-sws t fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face)) #("    TO DO
}" 0 1 (fontified t) 1 4 (fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t) 6 7 (fontified t) 7 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (fontified t)) #("void oneRoundSorting(cell_t* endSorting);" 0 1 (fontified t c-is-sws t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t) 5 6 (fontified t c-is-sws t face font-lock-function-name-face) 6 20 (fontified t face font-lock-function-name-face) 20 21 (fontified t c-type c-decl-arg-start) 21 22 (fontified t face font-lock-type-face) 22 23 (fontified t face font-lock-type-face) 23 24 (fontified t face font-lock-type-face) 24 25 (fontified t face font-lock-type-face) 25 26 (fontified t face font-lock-type-face) 26 27 (fontified t face font-lock-type-face) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t face font-lock-variable-name-face) 30 31 (fontified t face font-lock-variable-name-face) 31 32 (fontified t face font-lock-variable-name-face) 32 33 (fontified t face font-lock-variable-name-face) 33 34 (fontified t face font-lock-variable-name-face) 34 35 (fontified t face font-lock-variable-name-face) 35 36 (fontified t face font-lock-variable-name-face) 36 37 (fontified t face font-lock-variable-name-face) 37 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t) 40 41 (fontified t)) #("()" 0 2 (fontified t)) #("*/
/*
" 0 3 (fontified t) 3 4 (face font-lock-comment-delimiter-face c-is-sws t fontified t) 4 5 (face font-lock-comment-delimiter-face fontified t) 5 6 (face font-lock-comment-face rear-nonsticky t fontified t)) #("/*
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face)) #("/*" 0 2 (fontified t face font-lock-comment-delimiter-face)) #("    cell_t** cour = headPtr;" 0 4 (fontified t) 4 5 (fontified t face font-lock-type-face) 5 6 (fontified t face font-lock-type-face) 6 7 (fontified t face font-lock-type-face) 7 8 (fontified t face font-lock-type-face) 8 9 (fontified t face font-lock-type-face) 9 10 (fontified t c-type c-decl-id-start face font-lock-type-face) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t face font-lock-variable-name-face) 14 15 (fontified t face font-lock-variable-name-face) 15 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t face font-lock-variable-name-face) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 27 (fontified t) 27 28 (fontified t)) #(", points2=points2)" 0 10 (fontified t) 10 17 (fontified t) 17 18 (fontified t)) #("points_sur_courbe_niveau(rastrigin_2D, points1, points2=points2)" 0 24 (fontified t) 24 56 (fontified t) 56 63 (fontified t) 63 64 (rear-nonsticky t fontified t)) #("points_sur_courbe_niveau(rastrigin_2D, points1, points2=points2)" 0 24 (fontified t) 24 56 (fontified t) 56 63 (fontified t) 63 64 (fontified t)) #("points2)
" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) #("    pts = np.array(points)" 0 4 (fontified t) 4 7 (face font-lock-variable-name-face fontified t) 7 18 (fontified t) 18 26 (fontified t)) #("    ax.plot(points[:, 0], points[:, 1], '+--')" 0 4 (fontified t) 4 11 (fontified t) 11 12 (fontified t) 12 18 (fontified t) 18 24 (fontified t) 24 26 (fontified t) 26 32 (fontified t) 32 37 (fontified t) 37 38 (fontified t rear-nonsticky t) 38 40 (fontified t) 40 42 (face font-lock-string-face fontified t) 42 45 (face font-lock-string-face fontified t) 45 46 (rear-nonsticky t fontified t)) #("'Descente gradient'" 0 19 (face font-lock-string-face fontified t)) #("points_sur_courbe_niveau(rastrigin_2D, points1)" 0 24 (fontified t) 24 46 (fontified t) 46 47 (rear-nonsticky t fontified t)) #("points_sur_courbe_niveau(rastrigin_2D, points1)" 0 24 (fontified t) 24 46 (fontified t) 46 47 (fontified t)) #("x1, points1 = " 0 2 (face font-lock-variable-name-face fontified t) 2 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 14 (fontified t)) #("quadratic" 0 9 (fontified t)) #("descente_gradient_pas_decroissant(rastrigin, np.array([0.5, 0.7]))" 0 33 (fontified t) 33 53 (fontified t) 53 54 (fontified t) 54 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t)) #("    points.append(x)" 0 4 (fontified t) 4 17 (fontified t) 17 20 (fontified t)) #("    ax.plot(pts1[:, 0], pts1[:, 1], '+--', label='Descente gradient')" 0 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t) 16 22 (fontified t) 22 24 (fontified t) 24 28 (fontified t) 28 33 (fontified t) 33 34 (fontified t rear-nonsticky t) 34 36 (fontified t) 36 38 (face font-lock-string-face fontified t) 38 41 (face font-lock-string-face fontified t) 41 49 (fontified t) 49 68 (face font-lock-string-face fontified t) 68 69 (fontified t)) #("(_2D, None)" 0 6 (fontified t) 6 10 (face font-lock-constant-face fontified t) 10 11 (fontified t)) #("print()
è
" 0 5 (fontified t face font-lock-builtin-face) 5 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) "" "" "" #("        cont = ax.contour(X1, X2, z, 30)" 0 8 (fontified t) 8 12 (fontified t) 12 26 (fontified t) 26 28 (fontified t) 28 30 (fontified t) 30 32 (fontified t) 32 40 (fontified t)) #("x1=np.arange(-5, 5.1, 0.05), x2=np.arange(-5, 5.1, 0.05)" 0 56 (fontified t)) #("(subplot_kw={\"projection\": \"3d\"})" 0 13 (fontified t) 13 25 (face font-lock-string-face fontified t) 25 27 (fontified t) 27 31 (face font-lock-string-face fontified t) 31 33 (fontified t)) #("    fig, ax = plt.subplots(subplot_kw={\"projection\": \"3d\"})
    X1, X2 = np.meshgrid(x1, x2)
    z = func(np.array([X1, X2]))" 0 39 (fontified t) 39 51 (face font-lock-string-face fontified t) 51 53 (fontified t) 53 57 (face font-lock-string-face fontified t) 57 59 (fontified t)) #("    d = -g
" 0 4 (fontified t) 4 5 (face font-lock-variable-name-face fontified t) 5 10 (fontified t) 10 11 (fontified t)) #("(x, order=1)" 0 4 (fontified t) 4 11 (fontified t) 11 12 (fontified t))))
(setq search-ring '(#("open-file" 0 9 (isearch-regexp-function nil isearch-case-fold-search t)) #("text-scalem" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) #("voir la" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) #("faites" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) #("emacs" 0 5 (isearch-case-fold-search t isearch-regexp-function nil))))
(setq recentf-list '("/home/ubuntu/.emacs.d/.gitignore" "/home/ubuntu/.emacs.d/config.org" "c:/Users/mateo/Desktop/PROJET/X fenêtré/main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/pref_exTP.txt" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/arbres_insert.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/sorting_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/sorting.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/sorting.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/linkedList.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/linkedList.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/correction_malik.py" "c:/Users/mateo/AppData/Local/Temp/tetris-scores" "c:/Users/mateo/AppData/Roaming/.emacs.d/config.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/arbres_insert_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/arbres_insert.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/eltsArbre.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/eltPile.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/eltPile.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/analyse de donnees/TP4 - classification/classif_etudiants.ipynb" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Allemand/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/bdd/BDVins_queries.sql" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/bdd/BDFacturation_queries2.sql" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Anglais/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/lecteur-ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/3.pdf" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/lecteur.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/prodcons.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/producteur.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP3/partie2.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP3/partie1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP2/ex1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP1/test.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP1/ex3.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP1/ex1_2.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP3.zip" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/consommateur.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/TP3.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ex1q2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/teZZt.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/teZZt.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/eltsArbre.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/pile.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/eltPile.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/eltPile.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDVins_queries.sql" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/analyse de donnees/TP3 - AFC-ACM/afc-acm etudiant.ipynb" "c:/Users/mateo/AppData/Roaming/.emacs.d/straight/repos/xah-fly-keys/xah-fly-keys.el" "c:/Users/mateo/AppData/Roaming/.emacs.d/straight/build/xah-fly-keys/xah-fly-keys.el" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDFacturation_queries2.sql" "c:/Users/mateo/AppData/Roaming/.emacs.d/Astuces.org" "c:/Users/mateo/AppData/Roaming/.emacs.d/config.el" "c:/Users/mateo/AppData/Roaming/.emacs.d/.gitignore" "c:/Users/mateo/AppData/Roaming/.emacs.d/config.html" "c:/Users/mateo/Desktop/emacs/.emacs.d - Raccourci.lnk" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/C/test/main.c" "c:/Users/mateo/Desktop/emacs/todo.org" "c:/Users/mateo/AppData/Roaming/.emacs.d/init.el" "c:/Users/mateo/Desktop/test.txt" "c:/Users/mateo/Desktop/testemacs.txt" "c:/Users/mateo/Desktop/Trackmania.url"))
