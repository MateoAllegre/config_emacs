;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-char-history compile-history goto-line-history set-variable-value-history custom-variable-history regexp-history coding-system-history shell-command-history yes-or-no-p-history read-expression-history consult-org--history org-link--history command-history eww-prompt-history consult--line-history consult--buffer-history bookmark-history empty-history query-replace-history search-ring minibuffer-history file-name-history buffer-name-history extended-command-history))
(setq read-char-history '("yes"))
(setq goto-line-history '("213" "37"))
(setq set-variable-value-history '("4"))
(setq custom-variable-history '("c-basic-offset"))
(setq coding-system-history '("utf-8" "unix" "iso-latin-1" "unix" "utf-8"))
(setq shell-command-history '("C:/Windows/System32/wsl.exe"))
(setq yes-or-no-p-history '("yes"))
(setq command-history '((magit-gitignore-in-topdir "/var/backup/*.el") (magit nil '((52 . 22) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "HEAD~10")) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-upstream-branch nil) . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-push-branch nil nil)) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--short" "HEAD~") . "7756f46") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--short" "HEAD") . "e524c98") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "refs/stash") . "8bf4690476c2264d79df321f9ff3ca069c0b02bb") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--is-bare-repository") . "false
") ("c:/Users/mateo/AppData/Roaming/.emacs.d/" . "2.40.0") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-gitdir) . "c:/Users/mateo/AppData/Roaming/.emacs.d/.git/") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--git-dir") . ".git") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "describe" "--contains" "HEAD")) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "describe" "--long" "--tags")) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-push-branch "master" nil)) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "log" "--no-walk" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote)) "--") . "suppr trucs useless") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-upstream-branch "master") . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "log" "--no-walk" "--format=%h %s" "HEAD^{commit}" "--") . "e524c98 suppr trucs useless") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "symbolic-ref" "--short" "HEAD") . "master") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "HEAD") . "e524c986f9c37b8712c5ad43242af6b4e71076d0") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("diff.astextplain.textconv" ("astextplain") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "filter.lfs.process" ("git-lfs filter-process") "filter.lfs.required" ("true") "http.sslbackend" ("openssl") "http.sslcainfo" ("C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt") "core.autocrlf" ("true") "core.fscache" ("true") "core.symlinks" ("false" "false") "core.editor" ("notepad") "pull.rebase" ("false" "false") "credential.helper" ("manager") "credential.https://dev.azure.com.usehttppath" ("true") "init.defaultbranch" ("master") "user.email" ("mateo.allegre@etu.uca.fr") "user.name" ("Mateo Allegre") "core.repositoryformatversion" ("0") "core.filemode" ("false") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "remote.origin.url" ("git@github.com:MateoAllegre/config_emacs.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false") "i18n.logoutputencoding" ("UTF-8" "UTF-8")))) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" . magit-toplevel) . "c:/Users/mateo/AppData/Roaming/.emacs.d/") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--show-toplevel") . "C:/Users/mateo/AppData/Roaming/.emacs.d"))) (execute-extended-command nil "magit" "magi") (straight-use-package '(magit :type git :flavor melpa :files ("lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "Documentation/magit.texi" "Documentation/AUTHORS.md" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "magit-pkg.el") :host github :repo "magit/magit") nil nil nil 'interactive) (execute-extended-command nil "straight-use-package" "str") (bookmark-jump "configuration emacs") (find-file "c:/Users/mateo/Desktop/Travail/ZZ2/cpp/test.cpp" t) (dired-create-directory "c:/Users/mateo/Desktop/Travail/ZZ2/cpp") (avy-goto-char-2 116 114 nil nil nil) (bookmark-jump "Desktop") (emacs-version nil) (execute-extended-command nil "emacs-version" "em vee") (emacs-version nil) (execute-extended-command nil "emacs-version" "emacs vers") (reload-configuration-of-emacs) (execute-extended-command nil "reload-configuration-of-emacs" "relo") (avy-goto-char-2 99 45 nil nil nil) (avy-goto-char-2 99 34 nil nil nil) (avy-goto-char-2 111 116 nil nil nil) (org-insert-structure-template "src emacs-lisp

") (avy-goto-char-2 108 97 nil nil nil) (avy-goto-char-2 101 117 nil nil nil) (avy-goto-char-2 101 117 nil nil nil) (avy-goto-char-2 101 117 nil nil nil) (avy-goto-char-2 101 117 nil nil nil) (avy-goto-char-2 101 117 nil nil nil) (avy-goto-char-2 101 117 nil nil nil) (avy-goto-char-2 118 105 nil nil nil) (avy-goto-char-2 108 117 nil nil nil) (switch-to-buffer "*scratch*" nil 'force-same-window) (magit nil '((52 . 22) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "HEAD~10")) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-upstream-branch nil) . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-push-branch nil nil)) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--short" "HEAD~") . "7756f46") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--short" "HEAD") . "e524c98") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "refs/stash") . "8bf4690476c2264d79df321f9ff3ca069c0b02bb") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--is-bare-repository") . "false
") ("c:/Users/mateo/AppData/Roaming/.emacs.d/" . "2.40.0") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-gitdir) . "c:/Users/mateo/AppData/Roaming/.emacs.d/.git/") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--git-dir") . ".git") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "describe" "--contains" "HEAD")) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "describe" "--long" "--tags")) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-push-branch "master" nil)) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "log" "--no-walk" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote)) "--") . "suppr trucs useless") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" magit-get-upstream-branch "master") . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "log" "--no-walk" "--format=%h %s" "HEAD^{commit}" "--") . "e524c98 suppr trucs useless") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "symbolic-ref" "--short" "HEAD") . "master") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--verify" "HEAD") . "e524c986f9c37b8712c5ad43242af6b4e71076d0") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("diff.astextplain.textconv" ("astextplain") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "filter.lfs.process" ("git-lfs filter-process") "filter.lfs.required" ("true") "http.sslbackend" ("openssl") "http.sslcainfo" ("C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt") "core.autocrlf" ("true") "core.fscache" ("true") "core.symlinks" ("false" "false") "core.editor" ("notepad") "pull.rebase" ("false" "false") "credential.helper" ("manager") "credential.https://dev.azure.com.usehttppath" ("true") "init.defaultbranch" ("master") "user.email" ("mateo.allegre@etu.uca.fr") "user.name" ("Mateo Allegre") "core.repositoryformatversion" ("0") "core.filemode" ("false") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "remote.origin.url" ("git@github.com:MateoAllegre/config_emacs.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false") "i18n.logoutputencoding" ("UTF-8" "UTF-8")))) (("c:/Users/mateo/AppData/Roaming/.emacs.d/" . magit-toplevel) . "c:/Users/mateo/AppData/Roaming/.emacs.d/") (("c:/Users/mateo/AppData/Roaming/.emacs.d/" "rev-parse" "--show-toplevel") . "C:/Users/mateo/AppData/Roaming/.emacs.d"))) (execute-extended-command nil "magit" "mag") (straight-use-package '(magit :type git :flavor melpa :files ("lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "Documentation/magit.texi" "Documentation/AUTHORS.md" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "magit-pkg.el") :host github :repo "magit/magit") nil nil nil 'interactive) (execute-extended-command nil "straight-use-package" "stra") (avy-goto-char-2 103 101 nil nil nil) (avy-goto-char-2 109 97 nil nil nil) (avy-goto-char-2 100 105 nil nil nil) (avy-goto-char-2 115 105 nil nil nil) (avy-goto-char-2 102 111 nil nil nil) (avy-goto-char-2 109 111 nil nil nil) (avy-goto-char-2 116 97 nil nil nil) (avy-goto-char-2 109 97 nil nil nil) (avy-goto-char-2 117 110 nil nil nil) (tooltip-mode 'toggle) (execute-extended-command nil "tooltip-mode" nil) (tooltip-mode 'toggle) (execute-extended-command nil "tooltip-mode" "tooltip") (tool-bar-mode 'toggle) (execute-extended-command nil "tool-bar-mode" "tool") (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" "vis") (switch-to-buffer "*scratch*" nil 'force-same-window) (avy-goto-char-2 117 110 nil nil nil) (avy-goto-char-2 103 101 nil nil nil) (describe-key '(("+" . [43]))) (describe-key '(("*" . [42]))) (describe-key '(("/" . [47]))) (describe-key '(("(" . [40]))) (describe-key '(("=" . [61]))) (switch-to-buffer "TP2.org" nil 'force-same-window) (switch-to-buffer "TP2.org" nil 'force-same-window) (embark-act nil) (execute-extended-command nil "embark-act" "embar") (describe-function 'cp/xah-pop-local-mark-ring) (goto-last-change nil) (execute-extended-command nil "goto-last-change" "last chan") (avy-goto-char-2 116 101 nil nil nil) (avy-goto-char-2 112 115 nil nil nil) (execute-extended-command nil "describe-function" "descr fun") (describe-key '(([187] . [187]))) (execute-extended-command nil "describe-key" "desc") (avy-goto-char-2 108 101 nil nil nil) (switch-to-buffer "TPs tns orgmode" nil 'force-same-window) (switch-to-buffer "TPs tns orgmode" nil 'force-same-window) (set-buffer-file-coding-system 'utf-8 nil) (universal-coding-system-argument 'utf-8) (universal-coding-system-argument 'utf-8) (save-buffer 1) (execute-extended-command nil "save-buffer" "save bu") (universal-coding-system-argument 'utf-8) (set-selection-coding-system 'utf-8) (set-buffer-file-coding-system 'unix nil) (set-buffer-file-coding-system 'iso-latin-1 nil) (set-buffer-file-coding-system 'unix nil) (save-some-buffers nil) (execute-extended-command nil "save-some-buffers" "save some ") (save-buffer 1) (execute-extended-command nil "save-buffer" "save") (set-buffer-file-coding-system 'utf-8 nil) (set-buffer-file-coding-system 'utf-8 nil) (format-decode-region 1231 1359 '(plain)) (execute-extended-command nil "format-decode-region" nil) (format-decode-region 1660 2265 '(plain)) (execute-extended-command nil "format-decode-region" "format") (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" nil) (format-encode-buffer '(TeX)) (execute-extended-command nil "format-encode-buffer" "encode") (format-decode-buffer '(TeX)) (execute-extended-command nil "format-decode-buffer" "dec") (set-language-environment "UTF-8") (execute-extended-command nil "set-language-environment" nil) (set-language-environment "UTF-8") (execute-extended-command nil "set-language-environment" "lang") (org-ascii-convert-region-to-utf8) (execute-extended-command nil "org-ascii-convert-region-to-utf8" nil) (org-ascii-convert-region-to-utf8) (execute-extended-command nil "org-ascii-convert-region-to-utf8" "utf") (format-decode-buffer '(gtex)) (execute-extended-command nil "format-decode-buffer" "format") (query-replace " & " ", " nil nil nil nil nil) (query-replace " & " ", " nil nil nil nil nil) (query-replace " & " ", " nil nil nil nil nil) (query-replace "&" "," nil nil nil nil nil) (query-replace "&" "," nil nil nil nil nil) (switch-to-buffer "*scratch*" nil 'force-same-window) (magit nil '((45 . 20) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "HEAD~10")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-get-upstream-branch nil)) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-get-push-branch nil nil)) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--short" "HEAD~") . "29e4c4e") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--short" "HEAD") . "993f5d1") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "refs/stash") . "cea83ed771435eb16409ddac4b9b12db2795f84c") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--is-bare-repository") . "false
") ("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" . "2.40.0") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-gitdir) . "c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/.git/") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--git-dir") . ".git") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "describe" "--contains" "HEAD")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "describe" "--long" "--tags")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-get-push-branch "master" nil)) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "log" "--no-walk" "--format=%h %s" "HEAD^{commit}" "--") . "993f5d1 Ajout partiel du support d'une LED en PWM") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "symbolic-ref" "--short" "HEAD") . "master") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "HEAD") . "993f5d15bd5fa3e2c3149fa911b5dc1ea77f1b33") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("diff.astextplain.textconv" ("astextplain") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "filter.lfs.process" ("git-lfs filter-process") "filter.lfs.required" ("true") "http.sslbackend" ("openssl") "http.sslcainfo" ("C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt") "core.autocrlf" ("true") "core.fscache" ("true") "core.symlinks" ("false" "false") "core.editor" ("notepad") "pull.rebase" ("false") "credential.helper" ("manager") "credential.https://dev.azure.com.usehttppath" ("true") "init.defaultbranch" ("master") "user.email" ("mateo.allegre@etu.uca.fr") "user.name" ("Mateo Allegre") "core.repositoryformatversion" ("0") "core.filemode" ("false") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "remote.origin.url" ("https://github.com/MateoAllegre/bluetooth-key-finder.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false") "i18n.logoutputencoding" ("UTF-8" "UTF-8")))) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" . magit-toplevel) . "c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--show-toplevel") . "C:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr"))) (execute-extended-command nil "magit" "magit") (straight-use-package '(magit :type git :flavor melpa :files ("lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "Documentation/magit.texi" "Documentation/AUTHORS.md" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "magit-pkg.el") :host github :repo "magit/magit") nil nil nil 'interactive) (execute-extended-command nil "straight-use-package" "st") (switch-to-buffer "magit: peripheral_hr" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (magit nil '((41 . 20) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--short" "HEAD~")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--short" "HEAD") . "6335bd2") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "HEAD~10")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-get-upstream-branch nil)) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-get-push-branch nil nil)) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "refs/stash")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--is-bare-repository") . "false
") ("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" . "2.40.0") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-gitdir) . "c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/.git/") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--git-dir") . ".git") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "describe" "--contains" "HEAD")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "describe" "--long" "--tags")) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" magit-get-push-branch "master" nil)) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "log" "--no-walk" "--format=%h %s" "HEAD^{commit}" "--") . "6335bd2 Initial commit for peripheral_hr") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "symbolic-ref" "--short" "HEAD") . "master") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--verify" "HEAD") . "6335bd2e4db9c43648ee6e341a816278ab267ce3") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("diff.astextplain.textconv" ("astextplain") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "filter.lfs.process" ("git-lfs filter-process") "filter.lfs.required" ("true") "http.sslbackend" ("openssl") "http.sslcainfo" ("C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt") "core.autocrlf" ("true") "core.fscache" ("true") "core.symlinks" ("false" "false") "core.editor" ("notepad") "pull.rebase" ("false") "credential.helper" ("manager") "credential.https://dev.azure.com.usehttppath" ("true") "init.defaultbranch" ("master") "user.email" ("mateo.allegre@etu.uca.fr") "user.name" ("Mateo Allegre") "core.repositoryformatversion" ("0") "core.filemode" ("false") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false") "i18n.logoutputencoding" ("UTF-8" "UTF-8")))) (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" . magit-toplevel) . "c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/") (("c:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr/" "rev-parse" "--show-toplevel") . "C:/Users/mateo/Desktop/Travail/ZZ2/Design/new/peripheral_hr"))) (execute-extended-command nil "magit" "mag") (straight-use-package '(magit :type git :flavor melpa :files ("lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "Documentation/magit.texi" "Documentation/AUTHORS.md" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "magit-pkg.el") :host github :repo "magit/magit") nil nil nil 'interactive) (execute-extended-command nil "straight-use-package" "stra") (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" "vis") (recover-session) (execute-extended-command nil "recover-session" "reco") (avy-goto-char-2 101 44 nil nil nil) (avy-goto-char-2 110 101 nil nil nil) (kill-buffer "*doctor*") (execute-extended-command nil "kill-buffer" "buffer") (switch-to-buffer "script_expose.org" nil 'force-same-window) (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" "v") (find-file "c:/Users/mateo/Desktop/Travail/ZZ2/Communication/script_expose.org" t) (bookmark-jump "Desktop") (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" nil) (find-file "c:/Users/mateo/Desktop/Travail/ZZ2/Communication/lettremotiv.org" t) (bookmark-jump "Desktop") (execute-extended-command nil "straight-use-package" "stra") (switch-to-buffer "rapport_emb.org" nil 'force-same-window) (switch-to-buffer "*Org PDF LaTeX Output*" nil 'force-same-window) (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" "vi") (find-file "c:/Users/mateo/Desktop/Travail/rapport_emb.org" t) (bookmark-jump "Desktop") (magit nil '((51 . 24) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--verify" "HEAD~10")) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" magit-get-upstream-branch nil) . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" magit-get-push-branch nil nil)) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--short" "HEAD~") . "9f7a5d2") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--short" "HEAD") . "5356b28") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--verify" "refs/stash") . "50dfa0bd4bae20f1ee40b9724bf7e4268f7b4443") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--is-bare-repository") . "false
") ("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" . "2.40.0") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" magit-gitdir) . "c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/.git/") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--git-dir") . ".git") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "describe" "--contains" "HEAD")) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "describe" "--long" "--tags")) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" magit-get-push-branch "master" nil)) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "log" "--no-walk" "--format=%s" #("origin/master^{commit}" 0 13 (face magit-branch-remote font-lock-face magit-branch-remote)) "--") . "make it ours") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" magit-get-upstream-branch "master") . #("origin/master" 0 13 (font-lock-face magit-branch-remote face magit-branch-remote))) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--verify" "--abbrev-ref" "master@{upstream}") . "origin/master") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "log" "--no-walk" "--format=%h %s" "HEAD^{commit}" "--") . "5356b28 make it ours") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "symbolic-ref" "--short" "HEAD") . "master") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--verify" "HEAD") . "5356b28b8a663515b37a4ddd55a58fc67583c015") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" . config) . #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("diff.astextplain.textconv" ("astextplain") "filter.lfs.clean" ("git-lfs clean -- %f") "filter.lfs.smudge" ("git-lfs smudge -- %f") "filter.lfs.process" ("git-lfs filter-process") "filter.lfs.required" ("true") "http.sslbackend" ("openssl") "http.sslcainfo" ("C:/Program Files/Git/mingw64/etc/ssl/certs/ca-bundle.crt") "core.autocrlf" ("true") "core.fscache" ("true") "core.symlinks" ("false" "false") "core.editor" ("notepad") "pull.rebase" ("false") "credential.helper" ("manager") "credential.https://dev.azure.com.usehttppath" ("true") "init.defaultbranch" ("master") "core.repositoryformatversion" ("0") "core.filemode" ("false") "core.bare" ("false") "core.logallrefupdates" ("true") "core.ignorecase" ("true") "remote.origin.url" ("https://github.com/mordroreur/Hackaton_Mat-Lau.git") "remote.origin.fetch" ("+refs/heads/*:refs/remotes/origin/*") "branch.master.remote" ("origin") "branch.master.merge" ("refs/heads/master") "core.preloadindex" ("true" "true") "log.showsignature" ("false" "false") "color.ui" ("false" "false") "color.diff" ("false" "false") "i18n.logoutputencoding" ("UTF-8" "UTF-8")))) (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" . magit-toplevel) . "c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/" "rev-parse" "--show-toplevel") . "C:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/serveur/" . magit-toplevel) . "c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/") (("c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/serveur/" "rev-parse" "--show-toplevel") . "C:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau"))) (execute-extended-command nil "magit" "magit") (straight-use-package '(magit :type git :flavor melpa :files ("lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "Documentation/magit.texi" "Documentation/AUTHORS.md" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "magit-pkg.el") :host github :repo "magit/magit") nil nil nil 'interactive) (execute-extended-command nil "straight-use-package" "stra") (query-replace "acteur" "acteur collate utf8mb4_bin " nil nil nil nil nil) (query-replace "acteur" "acteur collate utf8mb4_bin " nil nil nil nil nil) (query-replace "username" "username collate utf8mb4_bin " nil nil nil nil nil) (avy-goto-char-2 97 99 nil nil nil) (avy-goto-char-2 32 105 nil nil nil) (avy-goto-char-2 112 97 nil nil nil) (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" nil) (org-insert-structure-template "src emacs-lisp

") (find-file "c:/Users/mateo/Desktop/hackathon/requetes.org" t) (bookmark-jump "Desktop") (switch-to-buffer "App.java" nil 'force-same-window) (switch-to-buffer "app" nil 'force-same-window) (avy-goto-char-2 115 121 nil nil nil) (bookmark-jump "Desktop") (global-visual-line-mode 'toggle) (execute-extended-command nil "global-visual-line-mode" "vis") (query-replace "l" "02510" nil nil nil nil nil) (query-replace "s" "025A0" nil nil nil nil nil) (query-replace "t" "02534" nil nil nil nil nil) (query-replace "-" "02500" nil nil nil nil nil) (query-replace "-" "02500" nil 64 115 nil nil) (find-file "c:/Users/mateo/Desktop/arg/ae27ff/Serves 3-4 (27)/ciphered.org" t) (query-replace "z" "" nil nil nil nil nil) (avy-goto-char-2 231 32 nil nil nil) (switch-to-buffer "test.org" nil 'force-same-window) (switch-to-buffer "string.org" nil 'force-same-window) (find-file "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)/test.org" t) (find-file "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)/string.org" t) (dired-create-directory "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)") (bookmark-jump "Desktop") (switch-to-buffer "*scratch*" nil 'force-same-window) (describe-variable 'user-emacs-directory) (describe-variable 'user-emacs-directory-warning) (describe-variable 'user-emacs-ensime-directory) (bookmark-jump "configuration emacs") (bookmark-jump "configuration emacs") (bookmark-jump "Desktop") (find-file "c:/Users/mateo/Desktop/PROJET/X fenêtré/main.c" t) (bookmark-jump "Desktop") (switch-to-buffer "sorting.c" nil 'force-same-window) (switch-to-buffer "Makefile" nil 'force-same-window) (linum-mode 'toggle) (execute-extended-command nil "linum-mode" "linum") (goto-line 213 nil) (goto-line 213 nil)))
(setq eww-prompt-history '("rickroll" "napoleon"))
(setq consult--line-history '("hook" "cp local" "z" "arg" "contour" "i 1 +=" "point cou" "point app" "def point" "func" "contour" "tracer " "tracer de" "comp" "ax fig" "comparaison" "string" "add hook comma" "alloc point" "raci" "fmem" "fmemopen" "fmem" "malloc" "depiler" "pile init" "pref2" "ärger" "avy go to char" "setq" "interpreter" "alloc" "test" "mat" "np.matr" "pop" "popul" "tp" "auto rever" "avy goto char" "pointu" "to char" "bu" "string" "minibuffer " "command hoo" "xfc hoo" "test" "auto save" "cp pop" "avy go to char" "emac" "consult"))
(setq bookmark-history '("configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "Desktop" "configuration emacs" "a" "a" "a" "configuration emacs" "Desktop"))
(setq query-replace-history '(", " " & " "," "&" "acteur collate utf8mb4_bin " "acteur" "username collate utf8mb4_bin " "username" "!0" "02510" "l" "025A0" "s" "02534" "t" "02500" "-" "" "z" "cour" "adrHeadPtr" "adrHeadPtr" "endSorting" "pts" "points" "e" "é" "X2" "x2" "X1" "x1" "np.pi" "pi" "frere" "frere_gauche" "" ";" "cell_lvlh_t" "lvlh_cell_t" "carotte" "wie" "x2" "x[1]" "x1" "x[0]" "la" "λ" "λ" "la" "end" "start" "n" "N" "test" "select" "commentaire" "commande"))
(setq search-ring '(#("open-file" 0 9 (isearch-case-fold-search t isearch-regexp-function nil)) #("text-scalem" 0 11 (isearch-regexp-function nil isearch-case-fold-search t)) #("voir la" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("faites" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("emacs" 0 5 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq minibuffer-history '("/var/backup/*.el" "magit" "cp/xah-pop-local-mark-ring" "plain" "TeX" "UTF-8" "gtex" "magit" "ai" "magit" "user-emacs-directory" "user-emacs-directory-warning" "user-emacs-ensime-directory" "u" "bash" "xah-save-all-unsaved" "save-some-buffers" "xah-fly-command-mode-activate-hook" "setq-default" "avy-goto-char-timer" "switch in python" "howdoi" "monkeytype" "gtranslate" "try-expand-line-all-buffers" "try-expand-dabbrev-visible" "2" "1" "0" "$#" "2" "1" "0" "$#" "python" "i" "dabbrev-expand" "embark-consult" "next-line" "use-short-answers" "explicit-shell-file-name" "shell-file-name" "explicit-shell-file-name" "xah-fly-command-mode-activate-hook" "auto-save-mode" "open-line" "xah-fly-org-mode-map" "expand-region" "configuration emacs" "company"))
(setq file-name-history '("c:/Users/mateo/Desktop/Travail/ZZ2/cpp/test.cpp" "c:/Users/mateo/Desktop/Travail/ZZ2/cpp" "~/.emacs.d/config.org" "~/.emacs.d/config.el" "c:/Users/mateo/Desktop/Travail/ZZ2/TP TNS/TPs tns orgmode/TP1.org" "c:/Users/mateo/Desktop/Travail/ZZ2/Communication/script_expose.org" "c:/Users/mateo/Desktop/Travail/ZZ2/Communication/lettremotiv.org" "c:/Users/mateo/Desktop/Travail/rapport_emb.org" "c:/Users/mateo/Desktop/hackathon/requetes.org" "c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/serveur/src/main/java/fr/MatLau/app/Login.java" "c:/Users/mateo/Desktop/arg/ae27ff/Serves 3-4 (27)/ciphered.org" "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)/test.org" "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)/string.org" "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)" "c:/Users/mateo/Desktop/PROJET/X fenêtré/main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/correction_malik.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Allemand/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Allemand/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/script.org" "c:/Users/mateo/Desktop/test.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/lecteur-ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/prodcons.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP2/ex1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/prodcons.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ex1q2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/TP3.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDVins_queries.sql" "c:/Users/mateo/Desktop/" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDFacturation_queries2.sql" "c:/Users/mateo/Desktop/emacs/todo.org" "c:/Users/mateo/Desktop/emacs/" "c:/Users/mateo/Desktop/test.txt" "../../../../mateo/Desktop/" "c:/Users/mateo/Desktop/testemacs.txt" "c:/Users/" "c:/Users/mateo/AppData/Roaming/.emacs.d/init.el" "../../../../mateo/Desktop/test.txt"))
(setq buffer-name-history '("*scratch*" "TP2.org" "TPs tns orgmode" "*scratch*" "magit: peripheral_hr" "*scratch*" "*doctor*" "script_expose.org" "rapport_emb.org" "*Org PDF LaTeX Output*" "App.java" "app" "test.org" "string.org" "*scratch*" "sorting.c" "Makefile" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting_main.c" "sorting.h" "sorting.c" "correction_malik.py" "*shell*" "p1.py" "*scratch*" "correction_malik.py" "*shell*" "p1.py" "*scratch*" "arbres_insert_main.c" "arbres_construct.c" "arbres_parcours.c" "arbres_insert.c" "arbres_construct.c" "arbres_parcours.h" "arbres_parcours.c" "arbres_construct.c" "arbres_parcours.h" "arbres_parcours.c" "arbres_construct.c" "Seance1" "arbres_construct.c" "script.org" "p1.py" "script.org" "*scratch*" "script.org" "script.org<Anglais>" "script.org<ZZ1 S2>" "lecteur-ecrivain.sh" "config.org" "lecteur.sh" "ecrivain.sh" "ecrivain2.sh" "ecrivain.sh" "lecteur.sh" "prodcons.sh" "producteur.sh" "prodcons.sh" "producteur.sh" "Opti non lin" "*Python*" "*scratch*" "partie1.py" "TP3.org" "ex1q2.sh" "TP3.org" "arbres_construct_main.c" "arbres_construct.h" "teZZt.h" "arbres_construct_main.c" "arbres_construct.h" "arbres_construct.c" "eltsArbre.h" "arbres_construct.c" "eltsArbre.h" "arbres_construct.c" "eltsArbre.h" "arbres_construct.h" "TP3" "partie2.py" "*shell*" "ex1.py" "*shell*" "TP1" "partie2.py" "TP1" "partie2.py" "*shell*" "partie2.py" "*scratch*" "config.org" "*scratch*" "config.org" "*Help*" "*scratch*" "BDVins_queries.sql<ZZ1 S2>" "*scratch*" "*shell*" "*scratch*" "config.org" "*scratch*" "BDVins_queries.sql" "BDFacturation_queries2.sql" "*Help*" "BDFacturation_queries2.sql" "*scratch*" "*GNU Emacs*" "*scratch*" "config.org" "Astuces.org" "config.org" "Astuces.org" "config.org" "untitled" "config.org" "*Help*" "*scratch*" "config.org" "*scratch*" "config.org" "*scratch*" "config.org" "*scratch*" "config.org" "*scratch*" "emacs" "Desktop" "*scratch*" "config.org" "Desktop" "*scratch*" "config.org" "*scratch*" "*Messages*" "ç" "*Messages*" "untitled" "Desktop" "*scratch*" "Desktop" "*scratch*" "*Messages*" "*scratch*"))
(setq extended-command-history '("magit" "straight-use-package" "emacs-version" "reload-configuration-of-emacs" "magit" "straight-use-package" "tooltip-mode" "tool-bar-mode" "global-visual-line-mode" "embark-act" "goto-last-change" "describe-function" "describe-key" "save-buffer" "save-some-buffers" "save-buffer" "format-decode-region" "global-visual-line-mode" "format-encode-buffer" "format-decode-buffer" "set-language-environment" "org-ascii-convert-region-to-utf8" "format-decode-buffer" "magit" "straight-use-package" "magit" "straight-use-package" "global-visual-line-mode" "recover-session" "kill-buffer" "global-visual-line-mode" "straight-use-package" "global-visual-line-mode" "magit" "straight-use-package" "global-visual-line-mode" "linum-mode" "goto-line" "tool-bar-mode" "consult-grep" "consult-ripgrep" "tetris" "keyfreq-show" "reload-configuration-of-emacs" "embark-act" "linum-mode" "revert-buffer" "embark-act" "compile" "goto-line" "embark-act" "hippie-expand" "linum-mode" "consult-ripgrep" "avy-goto-char-timer" "global-visual-line-mode" "shell" "howdoi-query" "straight-use-package" "run-python" "count-words" "global-visual-line-mode" "straight-use-package" "monkeytype-wpm-peek" "monkeytype-stop" "monkeytype-region" "straight-use-package" "global-visual-line-mode" "list-packages" "straight-use-package" "count-words" "avy-goto-char-2" "translate-region" "global-visual-line-mode" "wdired-change-to-wdired-mode" "doc-view-mode" "describe-key" "reload-configuration-of-emacs" "dabbrev-expand" "hippie-expand" "reload-configuration-of-emacs" "sh-case" "reload-configuration-of-emacs" "run-python" "sh-for" "revert-buffer-with-coding-system" "global-visual-line-mode" "linum-mode" "dabbrev-completion" "global-set-key" "global-visual-line-mode" "shell" "kill-buffer" "linum-mode" "query-replace" "shell" "python-menu" "run-python" "list-packages" "reload-configuration-of-emacs" "org-babel-expand-src-block" "list-packages" "describe-package" "straight-use-package" "consult-grep" "embark-act" "straight-use-package" "describe-package" "embark-act" "reload-configuration-of-emacs" "tetris" "reload-configuration-of-emacs" "tetris" "butterfly" "tetris-end-game" "tetris" "term" "describe-variable" "reload-configuration-of-emacs" "org-insert-structure-template" "cd" "global-visual-line-mode" "toggle-word-wrap" "recover-session" "reload-configuration-of-emacs" "undo" "emacs-lisp-mode" "reload-configuration-of-emacs" "linum-mode" "reload-configuration-of-emacs" "describe-variable" "reload-configuration-of-emacs" "revert-buffer" "emacs-version" "reload-configuration-of-emacs" "consult-grep" "consult-ripgrep" "reload-configuration-of-emacs" "consult-line" "straight-use-package" "avy-goto-char-timer" "avy-goto-char-2" "revert-buffer" "electric-pair-mode" "company-mode" "company-css" "straight-use-package" "consult-buffer" "straight-use-package" "tool-bar-mode" "reload-configuration-of-emacs" "electric-pair-mode" "comment-box" "xah-fly-keys"))
(setq kill-ring '(#("operating " 0 10 (help-echo #("For information about GNU Emacs and the GNU system, type C-h C-a." 57 64 (face help-key-binding font-lock-face help-key-binding)) face (variable-pitch font-lock-comment-face))) #("system.

" 0 9 (help-echo #("For information about GNU Emacs and the GNU system, type C-h C-a." 57 64 (face help-key-binding font-lock-face help-key-binding)) face (variable-pitch font-lock-comment-face))) #("    (add-hook 'c-mode-hook 'eglot-ensure)" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t) 2 26 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t) 26 40 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t) 40 41 (face (org-block) font-lock-multiline t help-echo nil rear-nonsticky t fontified t src-block t font-lock-fontified t)) #("'focus-out-hook" 0 15 (help-echo nil face (org-block) font-lock-multiline t fontified t src-block t font-lock-fontified t)) #("  (add-hook 'focus-out-hook 'xah-save-all-unsaved)" 0 50 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) "(use-package c
  :hook ((c-mode . eglot-ensure)
         (c++-mode . eglot-ensure))
  :config
  (with-eval-after-load 'eglot
    (add-to-list 'eglot-server-programs '((c++-mode c-mode) \"clangd\" \"--header-insertion=never\"))))" #("On utilise un Raycast (lancer de rayon) vers le bas pour savoir si le joueur est en contact avec le sol. Initialement, cette ligne était utile pour permettre ou non au joueur de sauter, mais nous avons finalement choisi de retirer le saut car il nous semblait inutile dans un jeu de cuisine. Ensuite, nous avons les deux lignes de récupération des \"Input\", c'est à dire les entrées de l'utilisateur. Plutôt que de bouger de façon brute, c'est-à-dire une téléportation sur une toute petite distance (un Translate), nous avons choisi d'ajouter une vélocité au joueur, ce qui permet à Unity de gérer seul les détections de collisions de façon propre. Pour éviter que cette vélocité ne devienne trop grande, nous la limitons à la vitesse maximum du joueur, que nous avons stockée dans une variable. Nous pouvons imaginer plus tard vouloir la modifier parce que nous ne sommes pas en accord avec la vitesse de déplacement, ou peut-être pour développer une amélioration qui pourrait changer cette valeur dynamiquement en fonction de certaines conditions. Enfin, le dernier bloc correspond à une modification de la force de frottement. Plus le frottement est fort, plus le joueur ralentit rapidement, ce pourquoi nous avons désactivé les frottements en l'air en passant le drag à 0. Cependant, tout comme le Raycast, cette modification n'a plus vraiment d'intérêt maintenant que l'on ne peut plus sauter.\\\\

Maintenant que l'on peut se déplacer, l'étape suivante de notre développement était de pouvoir attraper des objets." 0 498 (fontified t) 498 512 (fontified t) 512 935 (fontified t) 935 936 (fontified t) 936 1400 (fontified t) 1400 1401 (fontified t) 1401 1516 (fontified t)) #("la prochaine étape de notre développement s'est porté sur la capacité à attraper des objets. " 0 72 (fontified t) 72 92 (fontified t) 92 93 (rear-nonsticky t fontified t)) #("c'est pour cela que l'on remarque que dans l'aire, si le joueur ne touche pas le sol, il n'y a pas de frottement, et qu'il ne vas donc pas s'arrêter." 0 6 (fontified t) 6 11 (fontified t) 11 16 (fontified t) 16 20 (fontified t) 20 25 (fontified t) 25 34 (fontified t) 34 38 (fontified t) 38 43 (fontified t) 43 51 (fontified t) 51 54 (fontified t) 54 57 (fontified t) 57 64 (fontified t) 64 67 (fontified t) 67 74 (fontified t) 74 78 (fontified t) 78 81 (fontified t) 81 86 (fontified t) 86 89 (fontified t) 89 93 (fontified t) 93 95 (fontified t) 95 99 (fontified t) 99 102 (fontified t) 102 114 (fontified t) 114 117 (fontified t) 117 123 (fontified t) 123 126 (fontified t) 126 130 (fontified t) 130 135 (fontified t) 135 139 (fontified t) 139 149 (fontified t)) #("joueur s'arrêter" 0 7 (fontified t) 7 16 (fontified t)) #("r" 0 1 (fontified t)) #("pouvoi" 0 6 (fontified t)) #("pas" 0 3 (fontified t)) #("Mais p" 0 5 (fontified t) 5 6 (fontified t)) "On utilise un Raycast (lancer de rayon) vers le bas pour savoir si le joueur est en contact avec le sol. Initialement, cette ligne était utile pour permettre ou non au joueur de sauter, mais nous avons finalement choisi de retirer le saut car il nous semblait inutile dans un jeu de cuisine. Ensuite, nous avons les deux lignes de récupération des \"Input\", c'est à dire les entrées de l'utilisateur. Plutôt que de bouger de façon brut, c'est un dire une téléportation sur une toute petite distance, nous avons choisi d'ajouter une vélocité au joueur, ce qui permet à Unity de gère seul les détection de collision de façon propre. Mais pour pas que cette vélocité devienne trop grange, nous la limitons à la vitesse maximum du joeur que nous avons stocké dans une variable. Nous pouvons imaginer plus tard vouloir le modifier parce que nous ne sommes pas en accord avec la vitesse de déplacement ou peut être pouvoir développer une amélioration qui pourrait changer cette valeur en fonction de certaines conditions. Enfin, le dernier bloc correspond à la force de frottement. Plus le frottement est fort, plus le joueur vas vite s'arrêter, c'est pour cela que l'on remarque que dans l'aire, si le joueur ne touche pas le sol, il n'y a pas de frottement, et qu'il ne vas donc pas s'arrêter.\\\\

Maintenant que l'on peu se déplacer, la seconde étape de notre développement s'est porté sur la capacité à attraper des objets. " #("#+begin_src python
# Creation figure
fig,axs = plt.subplots(1,2,figsize=(15,5))

# Spectre divise
fftimg_div = fftimg_totems / fftimg_impulse # On divise les spectres (pas en dB)
ps_div = 20*np.log(abs(fftimg_div)) # Passage en dB pour l'affichage

# Centrage du zero
ps_div = np.fft.fftshift(abs(ps_div))

im = axs[0].imshow(ps_div, extent=[min(freqsX), max(freqsX), min(freqsY), max(freqsY)], origin='lower')
axs[0].set_xlim(-.2,.2)
axs[0].set_ylim(-.2,.2)
axs[0].set_title(\"Division\")
plt.colorbar(im, ax=axs[0], label='Power [Db]')


# Filtrage
K = 4.2e-6 
# Application du filtre (pas en dB)
fftimg_filtre = (1/fftimg_impulse) * (abs(fftimg_impulse)**2 / (abs(fftimg_impulse)**2 + K)) * fftimg_totems
ps_filtre = 20*np.log(abs(fftimg_filtre)) # Passage en dB pour l'affichage

ps_filtre = np.fft.fftshift(abs(ps_filtre))

im = axs[1].imshow(ps_filtre, extent=[min(freqsX), max(freqsX), min(freqsY), max(freqsY)], origin='lower')
plt.colorbar(im, ax=axs[1], label='Power [dB]')
axs[1].set_xlim(-.2,.2)
axs[1].set_ylim(-.2,.2)
axs[1].set_title(\"Filtre de Wiener\")
plt.show()
#+end_src" 0 18 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 18 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 19 21 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 21 37 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 37 40 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 40 41 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 41 44 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 44 81 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 81 83 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 83 98 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 98 142 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 142 144 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 144 179 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 179 198 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 198 201 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 201 215 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 215 217 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 217 248 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 248 249 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 249 251 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 251 268 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 268 293 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 293 296 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 296 342 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 342 345 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 345 355 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 355 358 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 358 368 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 368 371 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 371 381 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 381 384 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 384 402 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 402 409 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 409 476 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 476 486 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 486 522 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 522 534 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 534 538 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 538 540 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 540 549 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 549 561 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 561 563 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 563 597 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 597 635 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 635 638 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 638 661 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 661 664 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 664 728 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 728 731 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 731 748 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 748 750 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 750 781 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 781 810 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 810 813 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 813 865 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 865 868 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 868 878 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 878 881 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 881 891 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 891 894 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 894 904 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 904 907 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 907 925 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 925 932 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 932 968 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 968 980 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 980 1047 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1047 1065 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 1065 1078 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1078 1087 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) #("#+begin_src python
for i in range(len(ps)):
    for j in range(len(ps[0])):
        if ps[i][j] > 320 and i > 10 and j > 10:
            print(i,j)
            fftimg[i][j] = 0

VF = np.fft.ifftshift(fftimg)
UF = np.fft.ifft2(VF)

plt.figure(figsize=(10,10))
plt.imshow(abs(UF), cmap='gray')
plt.show()
#+end_src" 0 18 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 18 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 19 22 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 22 25 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 25 27 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 27 28 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 28 33 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 33 34 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 37 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 37 48 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 48 51 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 51 54 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 54 56 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 56 57 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 57 62 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 62 63 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 63 66 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 66 84 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 84 86 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 86 102 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 102 105 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 105 113 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 113 116 (src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 116 137 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 137 142 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 142 170 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 170 171 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 171 178 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 178 180 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 180 208 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 208 210 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 210 270 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 270 273 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 273 284 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 284 290 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 290 303 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 303 312 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) #("#+begin_src python
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.image as mpimg

img=mpimg.imread('astronaut.tif')

fig,axs = plt.subplots(1,2,figsize=(15,5))
axs[0].imshow(img, cmap='gray')
axs[0].set_title(\"L'image\")

ps = 20*np.log(abs(np.fft.fft2(img))) #sometimes Db is more visible than |G|^2, sometimes not
fftimg = np.fft.fft2(img)

freqsX = np.fft.fftfreq(img.shape[0], d=1) #get the frequency
freqsY = np.fft.fftfreq(img.shape[1], d=1)

im = axs[1].imshow(np.fft.fftshift(ps),#shift zero frequency to the middle
                  extent=[min(freqsX), max(freqsX), min(freqsY), max(freqsY)], origin='lower')
                  #set the axis

plt.colorbar(im, ax=axs[1], label='Power [dB]')
axs[1].set_xlim(-.05,.05)
axs[1].set_ylim(-.05,.05)
axs[1].set_title(\"Spectre\")

plt.show()
#+end_src" 0 18 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 18 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 19 25 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 25 44 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 44 46 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 46 51 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 51 57 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 57 64 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 64 66 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 66 70 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 70 76 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 76 94 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 94 96 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 96 104 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 104 107 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 107 121 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 121 136 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 136 139 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 139 142 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 142 143 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 143 146 (face (font-lock-variable-name-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 146 206 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 206 212 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 212 231 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 231 240 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 240 258 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 258 261 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 261 281 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 281 282 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 282 285 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 285 337 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 337 407 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 407 408 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 408 426 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 426 509 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 509 510 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 510 545 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 545 571 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 571 574 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 574 584 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 584 587 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 587 597 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 597 600 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 600 610 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 610 613 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 613 631 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 631 638 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 638 658 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 658 659 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 659 672 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 672 707 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 707 719 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 719 790 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 790 799 (face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 799 813 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 813 822 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) #("spectre grâce au passe-bas." 0 8 (fontified t) 8 14 (fontified t) 14 17 (fontified t) 17 23 (fontified t) 23 27 (fontified t)) #("#+begin_src python
####### Etape 2 - Rectification (valeur absolue) #######

ecg_fa_rectifie = abs(ecg_fa_bandpass)

affich_temp(ecg_fa_rectifie, Te, \"Signal rectifie\")
plt.xlim(-0.2,2.5)

# FFT
power_spectrum = abs(np.fft.fft(ecg_fa_rectifie))**2
freqs = np.fft.fftfreq(len(ecg_fa_rectifie), d=Te)

plt.figure(figsize=(15,5))
plt.plot(freqs, power_spectrum, linewidth=1)
plt.xlim(0, 50)
plt.title(\"Spectre apres rectification\")

plt.show()
#+end_src" 0 18 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 18 19 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t) 19 27 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 27 76 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 76 77 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 77 92 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 92 95 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 95 98 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 98 150 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 150 167 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 167 189 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 189 191 (src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 191 195 (src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 195 209 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 209 212 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 212 215 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 215 248 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 248 253 (src-block t face (font-lock-variable-name-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 253 271 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 271 274 (src-block t face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 274 398 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 398 427 (src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 427 441 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 441 450 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t)) #("spectre " 0 7 (src-block t font-lock-fontified t fontified t) 7 8 (fontified t)) #("ci-desss" 0 3 (fontified t font-lock-fontified t src-block t) 3 8 (fontified t font-lock-fontified t src-block t)) #("()" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) #("[[file:TP2_files/TP2_5_1.png]]" 0 1 (face org-link font-lock-multiline t help-echo "LINK: file:TP2_files/TP2_5_1.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t htmlize-link (:uri "file:TP2_files/TP2_5_1.png")) 1 2 (face org-link font-lock-multiline t help-echo "LINK: file:TP2_files/TP2_5_1.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:TP2_files/TP2_5_1.png")) 2 27 (font-lock-multiline t help-echo "LINK: file:TP2_files/TP2_5_1.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t htmlize-link (:uri "file:TP2_files/TP2_5_1.png")) 27 28 (font-lock-multiline t help-echo "LINK: file:TP2_files/TP2_5_1.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:TP2_files/TP2_5_1.png")) 28 29 (font-lock-multiline t help-echo "LINK: file:TP2_files/TP2_5_1.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t htmlize-link (:uri "file:TP2_files/TP2_5_1.png")) 29 30 (font-lock-multiline t help-echo "LINK: file:TP2_files/TP2_5_1.png" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link fontified t htmlize-link (:uri "file:TP2_files/TP2_5_1.png") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link))) #("[[file:TP2_files/TP2_5_1.png]]" 0 1 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 1 2 (face org-link font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 2 27 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 27 28 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 28 29 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 29 30 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) #("file:TP2_files/TP2_5_1.png]]" 0 25 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 25 26 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 26 27 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" fontified t) 27 28 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight invisible org-link face org-link htmlize-link (:uri "file:TP2_files/TP2_5_1.png") help-echo "LINK: file:TP2_files/TP2_5_1.png" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t)) "" #("{{C_3, -S_3, 0, a_3C_3}
{S_3, C_3, 0, a_3S_3}
{0, 0, 1, 0}
{0, 0, 0, 1}}" 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t) 5 7 (fontified t) 7 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t) 16 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t) 28 30 (fontified t) 30 33 (fontified t) 33 35 (fontified t) 35 36 (fontified t) 36 38 (fontified t) 38 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 50 (fontified t) 50 51 (fontified t) 51 53 (fontified t) 53 54 (fontified t) 54 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 63 (fontified t) 63 64 (fontified t) 64 66 (fontified t) 66 67 (fontified t) 67 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t)) "C_3 & -S_3 & 0 & a_3C_3 \\\\
S_3 & C_3 & 0 & a_3S_3 \\\\
0 & 0 & 1 & 0 \\\\
0 & 0 & 0 & 1 \\\\" #("{{C_2, -S_2, 0, a_2C_2}
{S_2, C_2, 0, a_2S_2}
{0, 0, 1, 0}
{0, 0, 0, 1}}" 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t) 5 7 (fontified t) 7 11 (fontified t) 11 13 (fontified t) 13 14 (fontified t) 14 16 (fontified t) 16 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t) 28 30 (fontified t) 30 33 (fontified t) 33 35 (fontified t) 35 36 (fontified t) 36 38 (fontified t) 38 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 50 (fontified t) 50 51 (fontified t) 51 53 (fontified t) 53 54 (fontified t) 54 56 (fontified t) 56 57 (fontified t) 57 58 (fontified t) 58 59 (fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 63 (fontified t) 63 64 (fontified t) 64 66 (fontified t) 66 67 (fontified t) 67 69 (fontified t) 69 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t)) "C_2 & -S_2 & 0 & a_2C_2 \\\\
S_2 & C_2 & 0 & a_2S_2 \\\\
0 & 0 & 1 & 0 \\\\
0 & 0 & 0 & 1 \\\\" #("{{C_1, 0, S_1, 0}
{S_1, 0, -C_1, 0}
{0, 1, 0, d_1}
{0, 0, 0, 1}}" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 6 (fontified t) 6 8 (fontified t) 8 10 (fontified t) 10 13 (fontified t) 13 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 22 (fontified t) 22 24 (fontified t) 24 25 (fontified t) 25 27 (fontified t) 27 31 (fontified t) 31 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 40 (fontified t) 40 41 (fontified t) 41 43 (fontified t) 43 44 (fontified t) 44 46 (fontified t) 46 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 53 (fontified t) 53 55 (fontified t) 55 56 (fontified t) 56 58 (fontified t) 58 59 (fontified t) 59 61 (fontified t) 61 62 (fontified t) 62 63 (fontified t) 63 64 (fontified t)) "C_1 & 0 & S_1 & 0 \\\\
S_1 & 0 & -C_1 & 0 \\\\
0 & 1 & 0 & d_1 \\\\
0 & 0 & 0 & 1 \\\\" "*{{4,5,6},{6,5,4},{4,6,5}}" #("* Introduction

Le métier d'ingénieur est un métier très vaste, impliquant une immense variété de rôles et de responsabilités, et donc aussi une grande diversité de compétences nécessaires. Notamment pour les ingénieurs en informatique, il est courant de les voir rapidement passer d'un domaine technique et programmatoire à une position de chef de projet, plus éloignée de la technique et plus proche du management et de la gestion d'une équipe. Même sans devenir chef de projet, un ingénieur peut aussi être amené à communiquer avec de nombreuses personnes, comme par exemple des clients.

Une question peut alors se poser : le leadership et le charisme sont-ils nécessaires dans le métier d'ingénieur ?

Pour répondre à cette problématique, Yassmine va tout d'abord définir les termes de leadership et de charisme, ainsi que quelques uns de leurs aspects. Puis dans un second temps, je vais débattre de l'intérêt de ces qualités pour un ingénieur, et nous allons voir si elles sont absolument nécessaires, ou si ce ne sont que des atouts utiles mais pas indispensables dans ce métier.

* Partie III - Importance du leadership et du charisme dans le métier d'ingénieur

Maintenant que nous avons vu ce que sont le leadership et le charisme, nous pouvons revenir à la question initiale : ces qualités sont-elles nécessaires dans le métier d'ingénieur ?

Cette question est souvent sujet à débat : certains considèrent ces compétences comme étant indispensables, alors que d'autres les voient plutôt comme des atouts qu'il peut être utile de posséder mais qui ne sont pas nécessairement obligatoires.

Dans cette partie, je vais donc présenter des arguments pour et contre la nécessité de ces talents pour un ingénieur.

Tout d'abord, commençons par les arguments \"pour\" :

Le premier est l'importance du leadership pour la gestion d'équipes. Assez rapidement dans leur carrière, la plupart des ingénieurs s'éloignent du côté pratique de leur formation et prennent des rôles plus manageriaux, comme chef de projet. Dans un tel rôle, ils ont la responsabilité de gérer et coordonner une équipe, une tâche pour laquelle des bonnes compétences en leadership sont capitales afin que le travail en équipe se passe le mieux possible et que les objectifs puissent être atteints.

Ensuite, dans la même idée, on trouve la nécessité d'une communication efficace, que ce soit à la direction d'une équipe, au sein d'une équipe ou encore avec d'autres parties, comme des clients. Un ingénieur est amené à communiquer en permanence avec une variété d'acteurs, ce pour quoi le charisme peut être une compétence importante pour établir des relations positives et inspirer confiance.

Enfin, il y a la prise de décisions importantes. Un ingénieur va se retrouver à prendre des décisions importantes pour l'entreprise et comme Yassmine l'a dit plus tôt, la prise de décisions est l'un des aspects du leadership. Un ingénieur leader est donc à même de prendre des meilleures décisions même sous pression.

Passons maintenant aux arguments qui s'opposent à la nécessité de ces compétences pour un ingénieur.

Tout d'abord, tous les ingénieurs ne prennent pas des rôles de gestion. Certains ingénieurs préfèrent le côté technique et vont donc rester en priorité dans des rôles où les compétences techniques, comme la résolution de problèmes ou la maîtrise des outils, ont une importance bien plus grande que les compétences de leadership. Ça ne veut pas dire que des compétences en leadership n'ont aucun intérêt pour ces ingénieurs, mais elles ne sont pas prioritaires face à la technique.

En ce qui concerne le charisme en particulier, il existe des formes de leadership autres que le leadership charismatique, par exemple le leadership autoritaire ou autocratique (où la prise de décision est entièrement centralisée par le leader), le leadership participatif (où des équipes restreintes prennent les décisions ensemble, avec un leader qui guide la prise de décision), ou encore le leadership transformationel (où le leader cherche à modifier la perception que ses collaborateurs ont de leur activité via des méthodes de travail). Certains ingénieurs peuvent donc diriger une équipe sans forcément avoir recours au leadership charismatique.

* Conclusion

Pour conclure, le leadership et le charisme sont des qualités indéniablement utiles pour un ingénieur, mais leur nécessité n'est pas garantie et dépend du rôle exact occupé par l'ingénieur dans l'entreprise. Pour certains ingénieurs chefs de projets chargés de diriger une équipe, le leadership est indispensable et le charisme est un atout inconsidérable pour l'appuyer. Cependant, des ingénieurs plus axés dans la technique n'ont pas nécessairement besoin de ces qualités plus que de compétences techniques importantes." 0 2 (fontified t face org-level-1) 2 14 (fontified t face org-level-1) 14 1089 (fontified t) 1089 1091 (fontified t face org-level-1) 1091 1170 (fontified t face org-level-1) 1170 1499 (fontified t) 1499 1601 (fontified t) 1601 3101 (fontified t) 3101 3571 (fontified t) 3571 3572 (fontified t) 3572 3748 (fontified t) 3748 3844 (fontified t) 3844 3994 (fontified t) 3994 4114 (fontified t) 4114 4225 (fontified t) 4225 4226 (fontified t) 4226 4228 (fontified t face org-level-1) 4228 4238 (fontified t face org-level-1) 4238 4239 (fontified t) 4239 4240 (fontified t) 4240 4761 (fontified t)) #("tututtttttttttttttttutututututututttutututututututututututututututttutututtututututututututututututututtututututututututtutttututttttttutuutttttteitueueueueuetueututeueststststsr" 0 178 (fontified t)) #("et définir" 0 3 (fontified t) 3 10 (fontified t)) #("ttttset" 0 7 (fontified t)) #("usreiuteiutstseiureuiutsreituirnatutueisrauttuesirtueirrtsaeiutusreiattueisrtueisratsraeiu" 0 90 (fontified t)) #("ta mè" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) #("Samedi 21 Octobre 2023

Mirari Games
180, rue La Fayette
75010 Paris

Objet : Candidature au stage de Game Développeur Unity C#

Madame, Monsieur,

C'est avec une grande excitation que je vous adresse ma candidature pour le stage de Game Développeur Unity C# au sein de Mirari Games, que vous avez posté sur Indeed. Je suis passionné de jeu vidéo, et j'ai une adoration toute particulière pour les jeux ayant une narration et un style artistique forts, comme votre premier jeu, Mirages of Winter. En découvrant la possibilité de contribuer au développement de votre prochain titre, j'ai immédiatement su que je voulais saisir cette opportunité de postuler pour ce stage.

Je suis convaincu que mon expérience en programmation et mon amour pour les jeux vidéo font de moi un candidat idéal pour ce poste. J'ai toujours été passionné par le jeu vidéo, pas seulement d'un point de vue de joueur, mais aussi d'un point de vue concepteur. Lors de mes études, j'ai eu la chance de travailler sur divers projets de jeu, notamment en équipes lors de Game Jams ou encore de manière personelle dans mon temps libre, ce qui m'a permis d'enrichir mes connaissances sur les décisions qui permettent à un jeu vidéo de toucher son public et d'offrir à ses joueurs la meilleure expérience possible. Je suis également persuadé que le développement d'un jeu nécessite une étroite collaboration et une communication transparente au sein de l'équipe. Ma personnalité autonome et mon esprit d'initiative me permettent de travailler en harmonie avec mes collègues pour atteindre des objectifs communs.

Les cours de Réalité Virtuelle enseignés dans ma filière, entièrement sous Unity, m'ont permis d'acquérir une connaissance approfondie de l'environnement Unity et de la programmation C#. De plus, j'ai déjà travaillé sur des shaders en GLSL lors d'un projet, durant lequel j'ai acquis des connaissances techniques particulières sur la réalisation, notamment, de ray-marching et de ray-tracing. Ces connaissances sont un atout supplémentaire, que je serais ravi d'exploiter au sein de votre équipe. Enfin, mon niveau d'anglais courant, tant à l'écrit qu'à l'oral, facilitera la communication avec des partenaires internationaux.

Je suis persuadé que ce stage chez Mirari Games serait une opportunité incroyable pour moi, et je suis prêt à apporter ma passion, mes compétences et mon dévouement pour contribuer au succès de votre projet.
Je vous remercie pour l'attention que vous porterez à ma candidature. Je reste à votre disposition pour des renseignements complémentaires et je me tiens disponible pour passer un entretien dans l'espoir que ma candidature vous intéresserait.

Je vous prie d'agréer, Madame, Monsieur, l'expression de mes salutations distinguées.

Matéo Allegre
" 0 22 (fontified t) 22 23 (fontified t) 23 70 (fontified t) 70 128 (fontified t) 128 148 (fontified t) 148 670 (fontified t) 670 671 (fontified t) 671 672 (fontified t) 672 1283 (fontified t) 1283 1284 (fontified t) 1284 1468 (fontified t) 1468 1500 (fontified t) 1500 1578 (fontified t) 1578 1579 (fontified t rear-nonsticky t) 1579 1580 (fontified t) 1580 1581 (fontified t) 1581 2077 (fontified t) 2077 2078 (fontified t) 2078 2207 (fontified t) 2207 2208 (fontified t) 2208 2209 (fontified t) 2209 2416 (fontified t) 2416 2417 (fontified t) 2417 2660 (fontified t) 2660 2661 (fontified t) 2661 2746 (fontified t) 2746 2747 (fontified t) 2747 2748 (fontified t) 2748 2761 (fontified t) 2761 2762 (fontified t)) #("Je suis impatient de discuter de ma candidature de manière plus approfondie." 0 76 (fontified t)) #("J'aimerais profiter de cette opportunité pour vous parler plus en détail de mon expérience et de mon portfolio, que je vous laisserai découvrir en pièces jointes avec mon CV." 0 174 (fontified t)) #("Je suis également persuadé que le développement d'un jeu nécessite une étroite collaboration et une communication transparente au sein de l'équipe. Ma personnalité autonome, organisée, et mon esprit d'initiative me permettent de travailler en harmonie avec mes collègues pour atteindre des objectifs communs.
" 0 1 (fontified t) 1 197 (fontified t) 197 309 (fontified t)) #("Mes études m'ont donné l'occasion de travailler en équipes à de nombreuses reprises, durant lesquelles j'a" 0 106 (fontified t)) #("Je suis également persuadé que le développement d'un jeu nécessite une étroite collaboration et une communication transparente au sein de l'équipe. Ma personnalité autonome, organisée, et mon esprit d'initiative me permettent de travailler en harmonie avec mes collègues pour atteindre des objectifs communs." 0 1 (fontified t) 1 197 (fontified t) 197 308 (fontified t)) #(", ce qui m'a permis d'acquérir une solide expertise en programmation C#.

J'ai toujours été passionné par le développement de jeux vidéo, et j'ai une connaissance approfondie de l'environnement Unity, de ses systèmes, de la gestion des niveaux, du gameplay, et de l'optimisation. Ma capacité à créer des expériences de jeu immersives est le fruit de mon engagement à toujours chercher des opportunités d'amélioration et à surmonter les obstacles techniques de manière proactive.

" 0 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t) 75 479 (fontified t) 479 480 (fontified t)) #("Ma capacité à créer des expériences de jeu immersives est le fruit de mon engagement à toujours chercher des opportunités d'amélioration et à surmonter les obstacles techniques de manière proactive." 0 198 (fontified t)) #(" Lorsque j'ai découvert l'opportunité de contribuer au développement d'un jeu mobile d'aventure en 3D d'une portée artistique exceptionnelle, j'ai immédiatement su que je voulais faire partie de votre équipe dynamique." 0 185 (fontified t) 185 186 (fontified t) 186 218 (fontified t)) #("[Prénom et Nom]
[Adresse]
[Code postal, Ville]

" 0 16 (fontified t) 16 17 (fontified t) 17 26 (fontified t) 26 27 (fontified t) 27 47 (fontified t) 47 48 (fontified t)) #("[Signature manuscrite, si la lettre est imprimée]

[Emplacements pour lier à votre CV : Insérez ici les liens ou les références vers votre CV et portfolio.]
" 0 40 (fontified t) 40 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 155 (fontified t) 155 156 (rear-nonsticky t fontified t) 156 157 (fontified t)) #("imprimée]

" 0 11 (fontified t)) "[Prénom et Nom]
[Adresse]
[Code postal, Ville]

[Date]

Mirari Games
180, rue La Fayette
75010 Paris

Objet : Candidature au poste de Game Développeur Unity C# - Stage

Madame, Monsieur,

C'est avec une grande excitation que je vous adresse ma candidature pour le poste de Game Développeur Unity C# au sein de Mirari Games. Lorsque j'ai découvert l'opportunité de contribuer au développement d'un jeu mobile d'aventure en 3D d'une portée artistique exceptionnelle, j'ai immédiatement su que je voulais faire partie de votre équipe dynamique.

Je suis convaincu que mon expérience en programmation et mon amour pour les jeux vidéo font de moi un candidat idéal pour ce poste. Au fil des années, j'ai eu la chance de travailler sur divers projets de jeu, allant des petites productions indépendantes aux titres plus ambitieux, ce qui m'a permis d'acquérir une solide expertise en programmation C#.

J'ai toujours été passionné par le développement de jeux vidéo, et j'ai une connaissance approfondie de l'environnement Unity, de ses systèmes, de la gestion des niveaux, du gameplay, et de l'optimisation. Ma capacité à créer des expériences de jeu immersives est le fruit de mon engagement à toujours chercher des opportunités d'amélioration et à surmonter les obstacles techniques de manière proactive.

Je suis également persuadé que le développement d'un jeu nécessite une étroite collaboration et une communication transparente au sein de l'équipe. Ma personnalité autonome, organisée, et mon esprit d'initiative me permettent de travailler en harmonie avec mes collègues pour atteindre des objectifs communs.

Par ailleurs, ma passion pour les jeux vidéo ne se limite pas au développement technique. J'ai une culture vidéoludique riche qui me permet de contribuer à l'amélioration de l'expérience du joueur. De plus, ma connaissance des shaders est un atout supplémentaire que je serais ravi d'exploiter au sein de votre équipe.

Enfin, mon niveau d'anglais courant, tant à l'écrit qu'à l'oral, facilitera la communication avec des partenaires internationaux.

J'aimerais profiter de cette opportunité pour vous parler plus en détail de mon expérience et de mon portfolio, que je vous laisserai découvrir en pièces jointes avec mon CV.

Je suis persuadé que rejoindre l'équipe de Mirari Games serait une opportunité incroyable pour moi, et je suis prêt à apporter ma passion, mes compétences et mon dévouement pour contribuer au succès de votre projet artistique et innovant.

Je vous remercie pour l'attention que vous porterez à ma candidature. Je suis impatient de discuter de ma candidature de manière plus approfondie.

Cordialement,

[Signature manuscrite, si la lettre est imprimée]

[Emplacements pour lier à votre CV : Insérez ici les liens ou les références vers votre CV et portfolio.]" #("La communication en SPI avec le LIB3MDL nécessite aussi un Chip Select, que nous avons chois" 0 92 (fontified t)) #("nous avons choisi de brancher sur la broche RC2. Il a aussi fallu vérifier l'initialisation du SPI via les registres du MSSP. Par exemple, le magnétomètre demande à ce que l'horloge soit tenue à 1 lorsqu'aucune transmission n'est en cours, ce qui signifie que l'état de repos de l'horloge est 1. Le bit 4 du registre de configuration SSPCON1 (CKP) doit donc être à 1.

Une fois les branchements effectués" 0 342 (fontified t) 342 367 (fontified t) 367 368 (fontified t) 368 369 (fontified t) 369 404 (fontified t)) "Le PIC18F452 possède un MSSP (Master Synchronous Serial Port), un composant qui permet de simplifier les échanges en SPI ou en I2C. Par exemple, ce composant abstrait l'échange de données bit à bit ayant lieu sur les fils, et permet un transfert de données octet par octet. En écrivant la donnée à envoyer dans le registre SSPBUF du MSSP, cette donnée est envoyée à l'esclave lors de 8 cycles d'horloge successifs. Le MSSP récupère en simultané la donnée envoyée par l'esclave (du moins en SPI), l'écrit dans ce même registre, et envoie un signal de contrôle BF (Buffer Full) pour signaler qu'une donnée est présente dans le registre et peut être lue.

J'ai donc choisi de communiquer en 4-Wire par l'intermédiaire du MSSP en récupérant le driver SPI d'un ancien TP. Pour communiquer en I2C ou SPI via le MSSP, il faut brancher le composant sur les broches dédiées du port C (RC3 pour SCK, RC4 pour MISO et RC5 pour MOSI). Nous avo" #("SELECT idDemande, titre, description, createur, dateCreation, acteur, priorite FROM Demandes NATURAL JOIN userDemande WHERE username COLLATE utf8mb4_bin = \"A\" AND acteur IS NOT NULL AND acteur COLLATE utf8mb4_bin != \"A\";" 0 4 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 6 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 6 25 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 25 37 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 37 38 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 38 48 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 48 60 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 60 70 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 70 79 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 79 83 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 83 93 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 93 100 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 100 101 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 101 105 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 105 106 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 106 116 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 116 117 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 117 118 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 118 119 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 119 123 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 123 124 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 124 133 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 133 140 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 140 153 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 153 154 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 154 155 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 155 159 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 159 162 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 162 170 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 170 172 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 172 173 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 173 176 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 176 177 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 177 181 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 181 182 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 182 185 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 185 186 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 186 193 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 193 200 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 200 212 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 212 215 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 215 216 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 216 219 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 219 220 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block))) #("SELECT idDemande, titre, description, createur, dateCreation, acteur, priorite FROM Demandes NATURAL JOIN userDemande WHERE username COLLATE utf8mb4_bin = \"A\" AND acteur IS NULL ORDER BY priorite, dateCreation DESC;" 0 4 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 6 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 6 25 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 25 37 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 37 38 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 38 48 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 48 60 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 60 70 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 70 79 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 79 83 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 83 93 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 93 100 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 100 101 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 101 105 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 105 106 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 106 116 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 116 117 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 117 118 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 118 123 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 123 124 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 124 133 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 133 140 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 140 153 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 153 154 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 154 155 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 155 159 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 159 162 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 162 163 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 163 169 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 169 170 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 170 172 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 172 173 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 173 177 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 177 178 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 178 183 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 183 184 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 184 186 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 186 187 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 187 197 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 197 210 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 210 214 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 214 215 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block))) #("SELECT idDemande, titre, description, createur, dateCreation, acteur, priorite FROM Demandes NATURAL JOIN userDemande WHERE username COLLATE utf8mb4_bin =\"A\" AND acteur COLLATE utf8mb4_bin =\"A\";" 0 4 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 6 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 6 9 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 9 10 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 10 38 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 38 48 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 48 60 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 60 70 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 70 79 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 79 83 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 83 93 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 93 100 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 100 101 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 101 105 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 105 106 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 106 118 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 118 123 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 123 124 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 124 133 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 133 140 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 140 153 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 153 154 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 154 156 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 156 157 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 157 158 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 158 161 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 161 162 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 162 169 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 169 176 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 176 189 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 189 190 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 190 192 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 192 193 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 193 194 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) #("SELECT idDemande, titre, description, createur, dateCreation, acteur, priorite FROM Demandes NATURAL JOIN userDemande WHERE username COLLATE utf8mb4_bin = \"A\" AND acteur IS NOT NULL AND acteur COLLATE utf8mb4_bin != \"A\";" 0 4 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 4 6 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 6 25 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 25 37 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 37 38 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 38 48 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 48 60 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 60 70 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 70 79 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 79 83 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 83 93 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 93 100 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 100 101 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 101 105 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 105 106 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 106 116 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 116 117 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)) 117 118 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 118 119 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 119 123 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 123 124 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 124 133 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 133 140 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 140 153 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 153 154 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 154 155 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 155 159 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 159 162 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 162 170 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 170 172 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 172 173 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 173 176 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 176 177 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 177 181 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 181 182 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 182 185 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face org-block)) 185 186 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 186 193 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 193 200 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 200 212 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 212 215 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 215 216 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block)) 216 219 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 219 220 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face (org-block)))))
(setq search-ring '(#("open-file" 0 9 (isearch-case-fold-search t isearch-regexp-function nil)) #("text-scalem" 0 11 (isearch-regexp-function nil isearch-case-fold-search t)) #("voir la" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) #("faites" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) #("emacs" 0 5 (isearch-regexp-function nil isearch-case-fold-search t))))
(setq recentf-list '("c:/Users/mateo/AppData/Roaming/.emacs.d/temp/untitled_20231219_140454_914d8.txt" "c:/Users/mateo/AppData/Roaming/.emacs.d/config.org" "c:/Users/mateo/Desktop/Travail/ZZ2/cpp/test.cpp" "c:/Users/mateo/AppData/Roaming/.emacs.d/config.el" "c:/Users/mateo/Desktop/Travail/ZZ2/TP TNS/TPs tns orgmode/TP3.org" "c:/Users/mateo/Desktop/Travail/ZZ2/TP TNS/TPs tns orgmode/TP2.org" "c:/Users/mateo/Desktop/Travail/ZZ2/TP TNS/TPs tns orgmode/TP1.org" "c:/Users/mateo/Desktop/Travail/ZZ2/Communication/script_expose.org" "c:/Users/mateo/Desktop/Travail/ZZ2/Communication/lettremotiv.org" "c:/Users/mateo/Desktop/Travail/rapport_emb.org" "c:/Users/mateo/Desktop/Travail/rapport_emb.tex" "c:/Users/mateo/Desktop/hackathon/requetes.org" "c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/serveur/src/main/java/fr/MatLau/app/App.java" "c:/Users/mateo/Desktop/hackathon/Hackaton_Mat-Lau/serveur/src/main/java/fr/MatLau/app/Login.java" "c:/Users/mateo/Desktop/arg/ae27ff/Serves 3-4 (27)/ciphered.org" "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)/test.org" "c:/Users/mateo/Desktop/arg/ae27ff/pattern observation (24)/string.org" "/home/ubuntu/.emacs.d/.gitignore" "/home/ubuntu/.emacs.d/config.org" "c:/Users/mateo/Desktop/PROJET/X fenêtré/main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/pref_exTP.txt" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/arbres_insert.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/sorting_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/sorting.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/sorting.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/linkedList.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/Squelette_Etudiants_Tris/linkedList.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/p1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP4/correction_malik.py" "c:/Users/mateo/AppData/Local/Temp/tetris-scores" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/arbres_insert_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/arbres_insert.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance3/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/arbres_parcours_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance2/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct_main.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/arbres_construct.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/eltsArbre.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/eltPile.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/eltPile.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/analyse de donnees/TP4 - classification/classif_etudiants.ipynb" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Allemand/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/bdd/BDVins_queries.sql" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/bdd/BDFacturation_queries2.sql" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Anglais/script.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/lecteur-ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/3.pdf" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/lecteur.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ecrivain2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/prodcons.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/producteur.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP3/partie2.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP3/partie1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP2/ex1.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP1/test.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP1/ex3.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP1/ex1_2.py" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/Opti non lin/TP3.zip" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/consommateur.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/TP3.org" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/TPSysteme/TP3-20230522/ex1q2.sh" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/teZZt.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/Seance1/Makefile" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres_2023/teZZt.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/eltsArbre.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/pile.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/eltPile.h" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/SDD/TP3/TP3Arbres/TP3_Arbres (2022-2023)-20230512/2. Squelette du programme TP3_Arbres_2023/TP3_Arbres_2023/eltPile.c" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDVins_queries.sql" "c:/Users/mateo/Desktop/Travail/ZZ1 S2/analyse de donnees/TP3 - AFC-ACM/afc-acm etudiant.ipynb" "c:/Users/mateo/AppData/Roaming/.emacs.d/straight/repos/xah-fly-keys/xah-fly-keys.el" "c:/Users/mateo/AppData/Roaming/.emacs.d/straight/build/xah-fly-keys/xah-fly-keys.el" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/bdd/BDFacturation_queries2.sql" "c:/Users/mateo/AppData/Roaming/.emacs.d/Astuces.org" "c:/Users/mateo/AppData/Roaming/.emacs.d/.gitignore" "c:/Users/mateo/AppData/Roaming/.emacs.d/config.html" "c:/Users/mateo/Desktop/emacs/.emacs.d - Raccourci.lnk" "c:/Users/mateo/Desktop/Travail/ZZ1 S1/C/test/main.c" "c:/Users/mateo/Desktop/emacs/todo.org" "c:/Users/mateo/AppData/Roaming/.emacs.d/init.el" "c:/Users/mateo/Desktop/test.txt" "c:/Users/mateo/Desktop/testemacs.txt" "c:/Users/mateo/Desktop/Trackmania.url"))
